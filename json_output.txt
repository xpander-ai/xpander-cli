
   ╭──────────────────────────────────────────────────────────────╮
   │                                                              │
   │                                                              │
   │                                                              │
   │                                    _                    _    │
   │                                   | |                  (_)   │
   │    __  __ _ __    __ _  _ __    __| |  ___  _ __  __ _  _    │
   │    \ \/ /| '_ \  / _` || '_ \  / _` | / _ \| '__|/ _` || |   │
   │     >  < | |_) || (_| || | | || (_| ||  __/| | _| (_| || |   │
   │    /_/\_\| .__/  \__,_||_| |_| \__,_| \___||_|(_)\__,_||_|   │
   │          | |                                                 │
   │          |_|                                                 │
   │                                                              │
   │                                                              │
   │          Build Better AI Agents faster                       │
   │          v0.0.0                                              │
   │                                                              │
   │                                                              │
   ╰──────────────────────────────────────────────────────────────╯

Fetching agents for organization: ee8e59aa-1498-49a9-b875-8aedb544acc9
[
  {
    "id": "6e507bd5-d11f-4f1c-90aa-07763b1a41ec",
    "assistant_id": "asst_123",
    "created_by_prompt": null,
    "thread_ids": [],
    "prompts": [
      "Create a new bug report with the title 'API Spec Update Issue'.",
      "Edit the bug report titled 'UI Glitch on Dashboard' to update the steps to reproduce.",
      "Find the bug report related to 'Login Failure on Mobile'.",
      "List all open bug reports in the 'Critical' category.",
      "Add a screenshot to the bug report 'Data Sync Error'."
    ],
    "enriched_prompts": [
      "Create a new bug report with the title 'API Spec Update Issue'.",
      "Edit the bug report titled 'UI Glitch on Dashboard' to update the steps to reproduce.",
      "Find the bug report related to 'Login Failure on Mobile'.",
      "List all open bug reports in the 'Critical' category.",
      "Add a screenshot to the bug report 'Data Sync Error'."
    ],
    "name": "Notion Bug Tracker Agent",
    "description": "",
    "tools": [
      {
        "id": "NotionPagePropertiesRetrievePropertyItemById",
        "name": "Access specific page property details. Workflow: retrievePageById to get properties -> retrievePropertyItemById -> updateOrArchivePageById to modify if needed. Returns property type and value. Useful for granular data access.",
        "raw_description": "Retrieves a specific property item for a page. If IDs aren't provided, use searchPagesAndDatabases first to find the correct page and property IDs. Extracts particular details from pages. Essential for granular data access and manipulation. Use for data extraction, property-specific operations, and dynamic content generation. Common applications include creating custom reports, updating specific fields, and integrating Notion data with external systems.",
        "function_description": "Retrieves a specific property item for a page. If IDs aren't provided, use searchPagesAndDatabases first to find the correct page and property IDs. Extracts particular details from pages. Essential for granular data access and manipulation. Use for data extraction, property-specific operations, and dynamic content generation. Common applications include creating custom reports, updating specific fields, and integrating Notion data with external systems.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "The unique identifier of the Notion page containing the property to be retrieved. This ID specifies which page in the Notion workspace should be accessed for property information. It can be obtained from operations like searchPagesAndDatabases or queryDatabaseEntriesById."
                },
                "propertyId": {
                  "type": "string",
                  "description": "The unique identifier of the specific property to retrieve from the Notion page. This ID determines which property's details should be fetched, allowing for granular access to page metadata. It can be obtained from operations like retrievePageById or retrieveDatabaseById."
                }
              },
              "required": [
                "pageId",
                "propertyId"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/NotionPagePropertiesRetrievePropertyItemById/pages/{pageId}/properties/{propertyId}"
      },
      {
        "id": "NotionBlockManageListChildBlocks",
        "name": "Retrieve nested block structures. Workflow: retrieveBlockById for parent -> listChildBlocks -> retrieveBlockById for child details. Returns paginated array of child blocks with their types and content.",
        "raw_description": "Returns a paginated array of child block objects. If parentContentBlockId isn't provided, run searchPagesAndDatabases before anything else to get the parent block ID. Use to explore page or database content hierarchies. Essential for understanding document structure. Common applications include content navigation, structure analysis, and nested content retrieval. Useful for building table of contents or document outlines.",
        "function_description": "Returns a paginated array of child block objects. If parentContentBlockId isn't provided, run searchPagesAndDatabases before anything else to get the parent block ID. Use to explore page or database content hierarchies. Essential for understanding document structure. Common applications include content navigation, structure analysis, and nested content retrieval. Useful for building table of contents or document outlines.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {
                "start_cursor": {
                  "type": "string",
                  "description": "If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results."
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of items from the full list desired in the response. Maximum: 100."
                }
              },
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "parentBlockId": {
                  "type": "string",
                  "description": "The unique identifier of the parent block to which child blocks will be appended or retrieved from. This ID specifies the block or page in Notion that will have its child blocks manipulated or fetched, enabling the creation of nested content structures. It can be obtained from operations like searchPagesAndDatabases or retrieveBlockById."
                }
              },
              "required": [
                "parentBlockId"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/NotionBlockManageListChildBlocks/blocks/{parentBlockId}/children"
      },
      {
        "id": "NotionBlockManageAppendChildBlocks",
        "name": "Add new blocks to existing content. Workflow: retrieveBlockById for parent -> appendChildBlocks -> listChildBlocks to verify. Supports multiple block types and nested structures. Useful for dynamic content creation.",
        "raw_description": "Appends children blocks to an existing block. If parentContentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to dynamically add content to pages or databases. Essential for content creation and expansion. Common applications include adding sections to documents, expanding existing content structures, and automated content generation. Useful for creating templates or standardized document structures.",
        "function_description": "Appends children blocks to an existing block. If parentContentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to dynamically add content to pages or databases. Essential for content creation and expansion. Common applications include adding sections to documents, expanding existing content structures, and automated content generation. Useful for creating templates or standardized document structures.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "after": {
            "type": "string",
            "description": "The ID of the"
          },
          "children": {
            "type": "array",
            "items": {
              "required": [
                "object",
                "type"
              ],
              "type": "object",
              "allOf": [
                {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "paragraph": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "heading_1": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        },
                        "heading_2": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        },
                        "heading_3": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "bulleted_list_item": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "numbered_list_item": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "to_do": {
                          "type": "object",
                          "properties": {
                            "checked": {
                              "type": "boolean"
                            },
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "toggle": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "language": {
                              "enum": [
                                "abap",
                                "arduino",
                                "bash",
                                "basic",
                                "c",
                                "clojure",
                                "coffeescript",
                                "c++",
                                "c#",
                                "css",
                                "dart",
                                "diff",
                                "docker",
                                "elixir",
                                "elm",
                                "erlang",
                                "flow",
                                "fortran",
                                "f#",
                                "gherkin",
                                "glsl",
                                "go",
                                "graphql",
                                "groovy",
                                "haskell",
                                "html",
                                "java",
                                "javascript",
                                "json",
                                "julia",
                                "kotlin",
                                "latex",
                                "less",
                                "lisp",
                                "livescript",
                                "lua",
                                "makefile",
                                "markdown",
                                "markup",
                                "matlab",
                                "mermaid",
                                "nix",
                                "objective-c",
                                "ocaml",
                                "pascal",
                                "perl",
                                "php",
                                "plain text",
                                "powershell",
                                "prolog",
                                "protobuf",
                                "python",
                                "r",
                                "reason",
                                "ruby",
                                "rust",
                                "sass",
                                "scala",
                                "scheme",
                                "scss",
                                "shell",
                                "sql",
                                "swift",
                                "typescript",
                                "vb.net",
                                "verilog",
                                "vhdl",
                                "visual basic",
                                "webassembly",
                                "xml",
                                "yaml",
                                "java/c/c++/c#"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "callout": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "icon": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "emoji": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "expiry_time": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "quote": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "equation": {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "A KaTeX compatible string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "divider": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table_of_contents": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "breadcrumb": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "column_list": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table": {
                          "type": "object",
                          "properties": {
                            "has_column_header": {
                              "type": "boolean"
                            },
                            "has_row_header": {
                              "type": "boolean"
                            },
                            "table_width": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table_row": {
                          "type": "object",
                          "properties": {
                            "cells": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "properties": {
                                        "bold": {
                                          "type": "boolean"
                                        },
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "color": {
                                          "enum": [
                                            "default",
                                            "gray",
                                            "brown",
                                            "orange",
                                            "yellow",
                                            "green",
                                            "blue",
                                            "purple",
                                            "pink",
                                            "red",
                                            "gray_background",
                                            "brown_background",
                                            "orange_background",
                                            "yellow_background",
                                            "green_background",
                                            "blue_background",
                                            "purple_background",
                                            "pink_background",
                                            "red_background"
                                          ],
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "italic": {
                                          "type": "boolean"
                                        },
                                        "strikethrough": {
                                          "type": "boolean"
                                        },
                                        "underline": {
                                          "type": "boolean"
                                        }
                                      },
                                      "description": "The annotations applied to the text."
                                    },
                                    "equation": {
                                      "type": "object",
                                      "properties": {
                                        "expression": {
                                          "type": "string",
                                          "example": "E = mc^2"
                                        }
                                      },
                                      "description": "The equation content."
                                    },
                                    "href": {
                                      "type": "string",
                                      "description": "The URL of the link."
                                    },
                                    "mention": {
                                      "type": "object",
                                      "properties": {
                                        "database": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        },
                                        "date": {
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "type": "string",
                                              "format": "date",
                                              "nullable": true
                                            },
                                            "start": {
                                              "type": "string",
                                              "format": "date"
                                            }
                                          }
                                        },
                                        "link_preview": {
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string",
                                              "format": "uri"
                                            }
                                          }
                                        },
                                        "page": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        },
                                        "template_mention": {
                                          "type": "object",
                                          "properties": {
                                            "template_mention_date": {
                                              "enum": [
                                                "today",
                                                "now"
                                              ],
                                              "type": "string"
                                            },
                                            "template_mention_user": {
                                              "enum": [
                                                "me"
                                              ],
                                              "type": "string"
                                            },
                                            "type": {
                                              "enum": [
                                                "template_mention_date",
                                                "template_mention_user"
                                              ],
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "enum": [
                                            "database",
                                            "date",
                                            "link_preview",
                                            "page",
                                            "template_mention",
                                            "user"
                                          ],
                                          "type": "string",
                                          "description": "The type of the mention."
                                        },
                                        "user": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        }
                                      },
                                      "description": "The mention content."
                                    },
                                    "plain_text": {
                                      "type": "string",
                                      "description": "The plain text content."
                                    },
                                    "text": {
                                      "type": "object",
                                      "properties": {
                                        "content": {
                                          "type": "string",
                                          "example": "Example text content"
                                        },
                                        "link": {
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string",
                                              "example": "https://www.example.com"
                                            }
                                          }
                                        }
                                      },
                                      "description": "The text content."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the rich text.",
                                      "example": "text"
                                    }
                                  },
                                  "description": "Represents rich text content in Notion."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "embed": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "bookmark": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "image": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "pdf": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "enum": [
                            "image",
                            "video",
                            "pdf",
                            "file"
                          ],
                          "type": "string"
                        },
                        "video": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "child_page": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "child_database": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "synced_block": {
                          "type": "object",
                          "properties": {
                            "synced_from": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "block_id": {
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "type": {
                                      "enum": [
                                        "block_id"
                                      ],
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "template": {
                          "type": "object",
                          "properties": {
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "link_preview": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "properties": {
                "archived": {
                  "type": "boolean",
                  "default": false
                },
                "created_by": {
                  "type": "object",
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "bot": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "workspace"
                            },
                            "workspace": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "6794760a-1f15-45cd-9c65-0dfe42f5135a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Aman Gupta"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    }
                  }
                },
                "created_time": {
                  "type": "string",
                  "format": "date-time"
                },
                "has_children": {
                  "type": "boolean",
                  "default": false
                },
                "id": {
                  "type": "string",
                  "description": "Identifier for the block",
                  "format": "uuid",
                  "example": "7af38973-3787-41b3-bd75-0ed3a1edfac9"
                },
                "in_trash": {
                  "type": "boolean",
                  "default": false
                },
                "last_edited_by": {
                  "type": "object",
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "bot": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "workspace"
                            },
                            "workspace": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "6794760a-1f15-45cd-9c65-0dfe42f5135a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Aman Gupta"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    }
                  }
                },
                "last_edited_time": {
                  "type": "string",
                  "format": "date-time"
                },
                "object": {
                  "type": "string",
                  "description": "Always \"block\"",
                  "example": "block"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "block_id": {
                      "type": "string",
                      "description": "The ID of the block that this page belongs to. Required if type is \"block_id\".",
                      "format": "uuid"
                    },
                    "database_id": {
                      "type": "string",
                      "description": "The ID of the database that this page belongs to. Required if type is \"database_id\".",
                      "format": "uuid"
                    },
                    "page_id": {
                      "type": "string",
                      "description": "The ID of the page that this page belongs to. Required if type is \"page_id\".",
                      "format": "uuid"
                    },
                    "type": {
                      "enum": [
                        "database_id",
                        "page_id",
                        "workspace",
                        "block_id"
                      ],
                      "type": "string",
                      "description": "The type of the parent object."
                    },
                    "workspace": {
                      "type": "boolean",
                      "description": "Always true. Required if type is \"workspace\".",
                      "example": true
                    }
                  },
                  "description": "Represents the parent object in Notion."
                },
                "type": {
                  "enum": [
                    "paragraph",
                    "heading_1",
                    "heading_2",
                    "heading_3",
                    "bulleted_list_item",
                    "numbered_list_item",
                    "to_do",
                    "toggle",
                    "code",
                    "callout",
                    "quote",
                    "equation",
                    "divider",
                    "table_of_contents",
                    "breadcrumb",
                    "column_list",
                    "column",
                    "table",
                    "table_row",
                    "embed",
                    "bookmark",
                    "image",
                    "video",
                    "pdf",
                    "file",
                    "child_page",
                    "child_database",
                    "synced_block",
                    "template",
                    "link_preview"
                  ],
                  "type": "string"
                }
              }
            }
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "parentBlockId": {
                  "type": "string",
                  "description": "The unique identifier of the parent block to which child blocks will be appended or retrieved from. This ID specifies the block or page in Notion that will have its child blocks manipulated or fetched, enabling the creation of nested content structures. It can be obtained from operations like searchPagesAndDatabases or retrieveBlockById."
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "after": {
                  "type": "string",
                  "description": "The ID of the"
                },
                "children": {
                  "type": "array",
                  "description": "children",
                  "items": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean"
                      },
                      "created_by": {
                        "type": "object",
                        "properties": {
                          "avatar_url": {
                            "type": "string"
                          },
                          "bot": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "workspace": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "created_time": {
                        "type": "string"
                      },
                      "has_children": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "in_trash": {
                        "type": "boolean"
                      },
                      "last_edited_by": {
                        "type": "object",
                        "properties": {
                          "avatar_url": {
                            "type": "string"
                          },
                          "bot": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "workspace": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "last_edited_time": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "string"
                          },
                          "database_id": {
                            "type": "string"
                          },
                          "page_id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "database_id",
                              "page_id",
                              "workspace",
                              "block_id"
                            ]
                          },
                          "workspace": {
                            "type": "boolean"
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "paragraph",
                          "heading_1",
                          "heading_2",
                          "heading_3",
                          "bulleted_list_item",
                          "numbered_list_item",
                          "to_do",
                          "toggle",
                          "code",
                          "callout",
                          "quote",
                          "equation",
                          "divider",
                          "table_of_contents",
                          "breadcrumb",
                          "column_list",
                          "column",
                          "table",
                          "table_row",
                          "embed",
                          "bookmark",
                          "image",
                          "video",
                          "pdf",
                          "file",
                          "child_page",
                          "child_database",
                          "synced_block",
                          "template",
                          "link_preview"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "children"
              ]
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "patch",
        "path": "/operation/NotionBlockManageListChildBlocks/blocks/{parentBlockId}/children"
      },
      {
        "id": "NotionDatabaseManageRetrieveDatabaseById",
        "name": "Access database schema and metadata. Workflow: searchPagesAndDatabases to find -> retrieveDatabaseById -> queryDatabaseEntriesById for data. Returns properties, title, icon, and cover information. Essential for database operations.",
        "raw_description": "Retrieves database details by its ID. If notionDatabaseId isn't provided, run searchPagesAndDatabases before anything else to find the correct database ID. Use to inspect database properties or prepare for queries. Essential for data analysis and integration. Common applications include schema verification, integration setup, and preparing for database operations. Useful for building custom views or reports based on database structure.",
        "function_description": "Retrieves database details by its ID. If notionDatabaseId isn't provided, run searchPagesAndDatabases before anything else to find the correct database ID. Use to inspect database properties or prepare for queries. Essential for data analysis and integration. Common applications include schema verification, integration setup, and preparing for database operations. Useful for building custom views or reports based on database structure.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "databaseId": {
                  "type": "string",
                  "description": "The unique identifier of the Notion database to query. This ID is used to specify which database in the Notion workspace should be queried, enabling retrieval of specific entries or filtered data sets based on defined criteria. It can be obtained from operations like searchPagesAndDatabases or retrieveDatabaseById."
                }
              },
              "required": [
                "databaseId"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/NotionDatabaseManageRetrieveDatabaseById/databases/{databaseId}"
      },
      {
        "id": "NotionPageManageCreateNewPageInWorkspace",
        "name": "Generate new pages with diverse properties. Workflow: listAllUsersInWorkspace for user IDs -> createNewPageInWorkspace -> updateOrArchivePageById for modifications. Supports various property types including relations, formulas, and files.",
        "raw_description": "Creates a new page as a child of an existing page or database. If parent ID isn't provided, use searchPagesAndDatabases first to find an appropriate parent. Expands Notion workspace with new content. Use for content creation, documentation, and project initialization. Common applications include creating meeting notes, project briefs, and knowledge base articles. Ensure all required properties are filled correctly for the parent database schema if applicable.",
        "function_description": "Creates a new page as a child of an existing page or database. If parent ID isn't provided, use searchPagesAndDatabases first to find an appropriate parent. Expands Notion workspace with new content. Use for content creation, documentation, and project initialization. Common applications include creating meeting notes, project briefs, and knowledge base articles. Ensure all required properties are filled correctly for the parent database schema if applicable.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "children": {
            "type": "array",
            "items": {
              "required": [
                "object",
                "type"
              ],
              "type": "object",
              "allOf": [
                {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "paragraph": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "heading_1": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        },
                        "heading_2": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        },
                        "heading_3": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "is_toggleable": {
                              "type": "boolean",
                              "default": false
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "bulleted_list_item": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "numbered_list_item": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "to_do": {
                          "type": "object",
                          "properties": {
                            "checked": {
                              "type": "boolean"
                            },
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "toggle": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "language": {
                              "enum": [
                                "abap",
                                "arduino",
                                "bash",
                                "basic",
                                "c",
                                "clojure",
                                "coffeescript",
                                "c++",
                                "c#",
                                "css",
                                "dart",
                                "diff",
                                "docker",
                                "elixir",
                                "elm",
                                "erlang",
                                "flow",
                                "fortran",
                                "f#",
                                "gherkin",
                                "glsl",
                                "go",
                                "graphql",
                                "groovy",
                                "haskell",
                                "html",
                                "java",
                                "javascript",
                                "json",
                                "julia",
                                "kotlin",
                                "latex",
                                "less",
                                "lisp",
                                "livescript",
                                "lua",
                                "makefile",
                                "markdown",
                                "markup",
                                "matlab",
                                "mermaid",
                                "nix",
                                "objective-c",
                                "ocaml",
                                "pascal",
                                "perl",
                                "php",
                                "plain text",
                                "powershell",
                                "prolog",
                                "protobuf",
                                "python",
                                "r",
                                "reason",
                                "ruby",
                                "rust",
                                "sass",
                                "scala",
                                "scheme",
                                "scss",
                                "shell",
                                "sql",
                                "swift",
                                "typescript",
                                "vb.net",
                                "verilog",
                                "vhdl",
                                "visual basic",
                                "webassembly",
                                "xml",
                                "yaml",
                                "java/c/c++/c#"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "callout": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "icon": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "emoji": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "expiry_time": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "quote": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            },
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "equation": {
                          "type": "object",
                          "properties": {
                            "expression": {
                              "type": "string",
                              "description": "A KaTeX compatible string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "divider": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table_of_contents": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "enum": [
                                "default",
                                "gray",
                                "brown",
                                "orange",
                                "yellow",
                                "green",
                                "blue",
                                "purple",
                                "pink",
                                "red",
                                "gray_background",
                                "brown_background",
                                "orange_background",
                                "yellow_background",
                                "green_background",
                                "blue_background",
                                "purple_background",
                                "pink_background",
                                "red_background"
                              ],
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "breadcrumb": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "column_list": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "object"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table": {
                          "type": "object",
                          "properties": {
                            "has_column_header": {
                              "type": "boolean"
                            },
                            "has_row_header": {
                              "type": "boolean"
                            },
                            "table_width": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "table_row": {
                          "type": "object",
                          "properties": {
                            "cells": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "properties": {
                                        "bold": {
                                          "type": "boolean"
                                        },
                                        "code": {
                                          "type": "boolean"
                                        },
                                        "color": {
                                          "enum": [
                                            "default",
                                            "gray",
                                            "brown",
                                            "orange",
                                            "yellow",
                                            "green",
                                            "blue",
                                            "purple",
                                            "pink",
                                            "red",
                                            "gray_background",
                                            "brown_background",
                                            "orange_background",
                                            "yellow_background",
                                            "green_background",
                                            "blue_background",
                                            "purple_background",
                                            "pink_background",
                                            "red_background"
                                          ],
                                          "type": "string",
                                          "example": "default"
                                        },
                                        "italic": {
                                          "type": "boolean"
                                        },
                                        "strikethrough": {
                                          "type": "boolean"
                                        },
                                        "underline": {
                                          "type": "boolean"
                                        }
                                      },
                                      "description": "The annotations applied to the text."
                                    },
                                    "equation": {
                                      "type": "object",
                                      "properties": {
                                        "expression": {
                                          "type": "string",
                                          "example": "E = mc^2"
                                        }
                                      },
                                      "description": "The equation content."
                                    },
                                    "href": {
                                      "type": "string",
                                      "description": "The URL of the link."
                                    },
                                    "mention": {
                                      "type": "object",
                                      "properties": {
                                        "database": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        },
                                        "date": {
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "type": "string",
                                              "format": "date",
                                              "nullable": true
                                            },
                                            "start": {
                                              "type": "string",
                                              "format": "date"
                                            }
                                          }
                                        },
                                        "link_preview": {
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string",
                                              "format": "uri"
                                            }
                                          }
                                        },
                                        "page": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        },
                                        "template_mention": {
                                          "type": "object",
                                          "properties": {
                                            "template_mention_date": {
                                              "enum": [
                                                "today",
                                                "now"
                                              ],
                                              "type": "string"
                                            },
                                            "template_mention_user": {
                                              "enum": [
                                                "me"
                                              ],
                                              "type": "string"
                                            },
                                            "type": {
                                              "enum": [
                                                "template_mention_date",
                                                "template_mention_user"
                                              ],
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "type": {
                                          "enum": [
                                            "database",
                                            "date",
                                            "link_preview",
                                            "page",
                                            "template_mention",
                                            "user"
                                          ],
                                          "type": "string",
                                          "description": "The type of the mention."
                                        },
                                        "user": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid"
                                            }
                                          }
                                        }
                                      },
                                      "description": "The mention content."
                                    },
                                    "plain_text": {
                                      "type": "string",
                                      "description": "The plain text content."
                                    },
                                    "text": {
                                      "type": "object",
                                      "properties": {
                                        "content": {
                                          "type": "string",
                                          "example": "Example text content"
                                        },
                                        "link": {
                                          "type": "object",
                                          "properties": {
                                            "url": {
                                              "type": "string",
                                              "example": "https://www.example.com"
                                            }
                                          }
                                        }
                                      },
                                      "description": "The text content."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the rich text.",
                                      "example": "text"
                                    }
                                  },
                                  "description": "Represents rich text content in Notion."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "embed": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "bookmark": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "file": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "image": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "pdf": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "enum": [
                            "image",
                            "video",
                            "pdf",
                            "file"
                          ],
                          "type": "string"
                        },
                        "video": {
                          "type": "object",
                          "properties": {
                            "caption": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            },
                            "external": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "file": {
                              "type": "object",
                              "properties": {
                                "expiry_time": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "file",
                                "external"
                              ],
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "child_page": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "child_database": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "synced_block": {
                          "type": "object",
                          "properties": {
                            "synced_from": {
                              "oneOf": [
                                {
                                  "type": "null"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "block_id": {
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "type": {
                                      "enum": [
                                        "block_id"
                                      ],
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "template": {
                          "type": "object",
                          "properties": {
                            "rich_text": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "type": "object",
                                    "properties": {
                                      "bold": {
                                        "type": "boolean"
                                      },
                                      "code": {
                                        "type": "boolean"
                                      },
                                      "color": {
                                        "enum": [
                                          "default",
                                          "gray",
                                          "brown",
                                          "orange",
                                          "yellow",
                                          "green",
                                          "blue",
                                          "purple",
                                          "pink",
                                          "red",
                                          "gray_background",
                                          "brown_background",
                                          "orange_background",
                                          "yellow_background",
                                          "green_background",
                                          "blue_background",
                                          "purple_background",
                                          "pink_background",
                                          "red_background"
                                        ],
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "italic": {
                                        "type": "boolean"
                                      },
                                      "strikethrough": {
                                        "type": "boolean"
                                      },
                                      "underline": {
                                        "type": "boolean"
                                      }
                                    },
                                    "description": "The annotations applied to the text."
                                  },
                                  "equation": {
                                    "type": "object",
                                    "properties": {
                                      "expression": {
                                        "type": "string",
                                        "example": "E = mc^2"
                                      }
                                    },
                                    "description": "The equation content."
                                  },
                                  "href": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  },
                                  "mention": {
                                    "type": "object",
                                    "properties": {
                                      "database": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "date": {
                                        "type": "object",
                                        "properties": {
                                          "end": {
                                            "type": "string",
                                            "format": "date",
                                            "nullable": true
                                          },
                                          "start": {
                                            "type": "string",
                                            "format": "date"
                                          }
                                        }
                                      },
                                      "link_preview": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "format": "uri"
                                          }
                                        }
                                      },
                                      "page": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      },
                                      "template_mention": {
                                        "type": "object",
                                        "properties": {
                                          "template_mention_date": {
                                            "enum": [
                                              "today",
                                              "now"
                                            ],
                                            "type": "string"
                                          },
                                          "template_mention_user": {
                                            "enum": [
                                              "me"
                                            ],
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "template_mention_date",
                                              "template_mention_user"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "type": {
                                        "enum": [
                                          "database",
                                          "date",
                                          "link_preview",
                                          "page",
                                          "template_mention",
                                          "user"
                                        ],
                                        "type": "string",
                                        "description": "The type of the mention."
                                      },
                                      "user": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The mention content."
                                  },
                                  "plain_text": {
                                    "type": "string",
                                    "description": "The plain text content."
                                  },
                                  "text": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "example": "Example text content"
                                      },
                                      "link": {
                                        "type": "object",
                                        "properties": {
                                          "url": {
                                            "type": "string",
                                            "example": "https://www.example.com"
                                          }
                                        }
                                      }
                                    },
                                    "description": "The text content."
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the rich text.",
                                    "example": "text"
                                  }
                                },
                                "description": "Represents rich text content in Notion."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "link_preview": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ],
              "properties": {
                "archived": {
                  "type": "boolean",
                  "default": false
                },
                "created_by": {
                  "type": "object",
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "bot": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "workspace"
                            },
                            "workspace": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "6794760a-1f15-45cd-9c65-0dfe42f5135a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Aman Gupta"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    }
                  }
                },
                "created_time": {
                  "type": "string",
                  "format": "date-time"
                },
                "has_children": {
                  "type": "boolean",
                  "default": false
                },
                "id": {
                  "type": "string",
                  "description": "Identifier for the block",
                  "format": "uuid",
                  "example": "7af38973-3787-41b3-bd75-0ed3a1edfac9"
                },
                "in_trash": {
                  "type": "boolean",
                  "default": false
                },
                "last_edited_by": {
                  "type": "object",
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "bot": {
                      "type": "object",
                      "properties": {
                        "owner": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "workspace"
                            },
                            "workspace": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string",
                      "example": "6794760a-1f15-45cd-9c65-0dfe42f5135a"
                    },
                    "name": {
                      "type": "string",
                      "example": "Aman Gupta"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "example@example.com"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "person"
                    }
                  }
                },
                "last_edited_time": {
                  "type": "string",
                  "format": "date-time"
                },
                "object": {
                  "type": "string",
                  "description": "Always \"block\"",
                  "example": "block"
                },
                "parent": {
                  "type": "object",
                  "properties": {
                    "block_id": {
                      "type": "string",
                      "description": "The ID of the block that this page belongs to. Required if type is \"block_id\".",
                      "format": "uuid"
                    },
                    "database_id": {
                      "type": "string",
                      "description": "The ID of the database that this page belongs to. Required if type is \"database_id\".",
                      "format": "uuid"
                    },
                    "page_id": {
                      "type": "string",
                      "description": "The ID of the page that this page belongs to. Required if type is \"page_id\".",
                      "format": "uuid"
                    },
                    "type": {
                      "enum": [
                        "database_id",
                        "page_id",
                        "workspace",
                        "block_id"
                      ],
                      "type": "string",
                      "description": "The type of the parent object."
                    },
                    "workspace": {
                      "type": "boolean",
                      "description": "Always true. Required if type is \"workspace\".",
                      "example": true
                    }
                  },
                  "description": "Represents the parent object in Notion."
                },
                "type": {
                  "enum": [
                    "paragraph",
                    "heading_1",
                    "heading_2",
                    "heading_3",
                    "bulleted_list_item",
                    "numbered_list_item",
                    "to_do",
                    "toggle",
                    "code",
                    "callout",
                    "quote",
                    "equation",
                    "divider",
                    "table_of_contents",
                    "breadcrumb",
                    "column_list",
                    "column",
                    "table",
                    "table_row",
                    "embed",
                    "bookmark",
                    "image",
                    "video",
                    "pdf",
                    "file",
                    "child_page",
                    "child_database",
                    "synced_block",
                    "template",
                    "link_preview"
                  ],
                  "type": "string"
                }
              }
            },
            "description": "This endpoint can be used to create a new page with or without content using the children option. To add content to a page after creating it, use the Append block children endpoint. The content to be rendered on the new page, represented as an array of block objects.\n"
          },
          "cover": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            },
            "description": "File objects store data for a Notion-hosted or external file. Their \"type\" can be \"file\" or \"external.\"   • For type=\"file\":  \n  {  \n    \"type\": \"file\",  \n    \"file\": {  \n      \"url\": \"https://s3.us-west-2.amazonaws.com/sec...\",  \n      \"expiry_time\": \"2022-10-24T22:49:22.765Z\"  \n    }  \n  }  \n• For type=\"external\":  \n  {  \n    \"type\": \"external\",  \n    \"external\": {  \n      \"url\": \"https://images.unsplash.com/photo-152531...\"  \n    }  \n  }  \nThe “file” or “external” object includes its own URL details, with “file” also providing an expiry time.\n"
          },
          "icon": {
            "type": "object",
            "properties": {
              "emoji": {
                "type": "string"
              }
            },
            "description": "The icon of the new page. Either an emoji object or an external file object..\n"
          },
          "parent": {
            "type": "object",
            "properties": {
              "database_id": {
                "type": "string"
              },
              "page_id": {
                "type": "string"
              }
            }
          },
          "properties": {
            "type": "object",
            "properties": {
              "Assign": {
                "type": "object",
                "properties": {
                  "people": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "avatar_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string"
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Blueprint": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "external": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Contact_phone_number": {
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string"
                  }
                }
              },
              "Created": {
                "type": "object",
                "properties": {
                  "created_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "Created_by": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "object": {
                    "type": "string"
                  }
                }
              },
              "Created_time": {
                "type": "object",
                "properties": {
                  "created_time": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "Date": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "object",
                    "properties": {
                      "end": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "start": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "Days_until_launch": {
                "type": "object",
                "properties": {
                  "formula": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "number"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "Department": {
                "type": "object",
                "properties": {
                  "select": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "Description": {
                "type": "object",
                "properties": {
                  "rich_text": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "properties": {
                            "bold": {
                              "type": "boolean"
                            },
                            "code": {
                              "type": "boolean"
                            },
                            "color": {
                              "type": "string"
                            },
                            "italic": {
                              "type": "boolean"
                            },
                            "strikethrough": {
                              "type": "boolean"
                            },
                            "underline": {
                              "type": "boolean"
                            }
                          }
                        },
                        "href": {
                          "type": "string"
                        },
                        "plain_text": {
                          "type": "string"
                        },
                        "text": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "type": "string"
                            },
                            "link": {
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Due_date": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "object",
                    "properties": {
                      "end": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "start": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              },
              "Email": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              },
              "Number_of_subscribers": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "number"
                  }
                }
              },
              "Programming_language": {
                "type": "object",
                "properties": {
                  "multi_select": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "color": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Related_tasks": {
                "type": "object",
                "properties": {
                  "relation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Stakeholders": {
                "type": "object",
                "properties": {
                  "people": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "avatar_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string"
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "Status": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "object",
                    "properties": {
                      "color": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "Task_completed": {
                "type": "object",
                "properties": {
                  "checkbox": {
                    "type": "boolean"
                  }
                }
              },
              "Verification": {
                "type": "object",
                "properties": {
                  "verification": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "object",
                        "properties": {
                          "end": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "start": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "state": {
                        "type": "string"
                      },
                      "verified_by": {
                        "type": "object",
                        "properties": {
                          "avatar_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "object": {
                            "type": "string"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Website": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "test_ID": {
                "type": "object",
                "properties": {
                  "unique_id": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "number"
                      },
                      "prefix": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "title": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "object",
                          "properties": {
                            "content": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "If parent is a database (database_id), each key in `properties` corresponds to a column name in that database.   If parent is a page (page_id), the only valid property name is `title`.\n"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "children": {
                  "type": "array",
                  "description": "This endpoint can be used to create a new page with or without content using the children option. To add content to a page after creating it, use the Append block children endpoint. The content to be rendered on the new page, represented as an array of block objects.\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "archived": {
                        "type": "boolean"
                      },
                      "created_by": {
                        "type": "object",
                        "properties": {
                          "avatar_url": {
                            "type": "string"
                          },
                          "bot": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "workspace": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "created_time": {
                        "type": "string"
                      },
                      "has_children": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "in_trash": {
                        "type": "boolean"
                      },
                      "last_edited_by": {
                        "type": "object",
                        "properties": {
                          "avatar_url": {
                            "type": "string"
                          },
                          "bot": {
                            "type": "object",
                            "properties": {
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "workspace": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      },
                      "last_edited_time": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string"
                      },
                      "parent": {
                        "type": "object",
                        "properties": {
                          "block_id": {
                            "type": "string"
                          },
                          "database_id": {
                            "type": "string"
                          },
                          "page_id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "database_id",
                              "page_id",
                              "workspace",
                              "block_id"
                            ]
                          },
                          "workspace": {
                            "type": "boolean"
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "paragraph",
                          "heading_1",
                          "heading_2",
                          "heading_3",
                          "bulleted_list_item",
                          "numbered_list_item",
                          "to_do",
                          "toggle",
                          "code",
                          "callout",
                          "quote",
                          "equation",
                          "divider",
                          "table_of_contents",
                          "breadcrumb",
                          "column_list",
                          "column",
                          "table",
                          "table_row",
                          "embed",
                          "bookmark",
                          "image",
                          "video",
                          "pdf",
                          "file",
                          "child_page",
                          "child_database",
                          "synced_block",
                          "template",
                          "link_preview"
                        ]
                      }
                    }
                  }
                },
                "cover": {
                  "type": "object",
                  "description": "File objects store data for a Notion-hosted or external file. Their \"type\" can be \"file\" or \"external.\"   • For type=\"file\":  \n  {  \n    \"type\": \"file\",  \n    \"file\": {  \n      \"url\": \"https://s3.us-west-2.amazonaws.com/sec...\",  \n      \"expiry_time\": \"2022-10-24T22:49:22.765Z\"  \n    }  \n  }  \n• For type=\"external\":  \n  {  \n    \"type\": \"external\",  \n    \"external\": {  \n      \"url\": \"https://images.unsplash.com/photo-152531...\"  \n    }  \n  }  \nThe “file” or “external” object includes its own URL details, with “file” also providing an expiry time.\n",
                  "properties": {
                    "external": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "icon": {
                  "type": "object",
                  "description": "The icon of the new page. Either an emoji object or an external file object..\n",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    }
                  }
                },
                "parent": {
                  "type": "object",
                  "description": "parent",
                  "properties": {
                    "database_id": {
                      "type": "string"
                    },
                    "page_id": {
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "If parent is a database (database_id), each key in `properties` corresponds to a column name in that database.   If parent is a page (page_id), the only valid property name is `title`.\n",
                  "properties": {
                    "Assign": {
                      "type": "object",
                      "properties": {
                        "people": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "avatar_url": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "object": {
                                "type": "string"
                              },
                              "person": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Blueprint": {
                      "type": "object",
                      "properties": {
                        "files": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "external": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Contact_phone_number": {
                      "type": "object",
                      "properties": {
                        "phone_number": {
                          "type": "string"
                        }
                      }
                    },
                    "Created": {
                      "type": "object",
                      "properties": {
                        "created_time": {
                          "type": "string"
                        }
                      }
                    },
                    "Created_by": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string"
                        }
                      }
                    },
                    "Created_time": {
                      "type": "object",
                      "properties": {
                        "created_time": {
                          "type": "string"
                        }
                      }
                    },
                    "Date": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "object",
                          "properties": {
                            "end": {
                              "type": "string"
                            },
                            "start": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Days_until_launch": {
                      "type": "object",
                      "properties": {
                        "formula": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "number"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Department": {
                      "type": "object",
                      "properties": {
                        "select": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Description": {
                      "type": "object",
                      "properties": {
                        "rich_text": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "object",
                                "properties": {
                                  "bold": {
                                    "type": "boolean"
                                  },
                                  "code": {
                                    "type": "boolean"
                                  },
                                  "color": {
                                    "type": "string"
                                  },
                                  "italic": {
                                    "type": "boolean"
                                  },
                                  "strikethrough": {
                                    "type": "boolean"
                                  },
                                  "underline": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "href": {
                                "type": "string"
                              },
                              "plain_text": {
                                "type": "string"
                              },
                              "text": {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "type": "string"
                                  },
                                  "link": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Due_date": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "object",
                          "properties": {
                            "end": {
                              "type": "string"
                            },
                            "start": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Email": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "Number_of_subscribers": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "number"
                        }
                      }
                    },
                    "Programming_language": {
                      "type": "object",
                      "properties": {
                        "multi_select": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "color": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Related_tasks": {
                      "type": "object",
                      "properties": {
                        "relation": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Stakeholders": {
                      "type": "object",
                      "properties": {
                        "people": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "avatar_url": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "object": {
                                "type": "string"
                              },
                              "person": {
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "Status": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "color": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Task_completed": {
                      "type": "object",
                      "properties": {
                        "checkbox": {
                          "type": "boolean"
                        }
                      }
                    },
                    "Verification": {
                      "type": "object",
                      "properties": {
                        "verification": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "object",
                              "properties": {
                                "end": {
                                  "type": "string"
                                },
                                "start": {
                                  "type": "string"
                                }
                              }
                            },
                            "state": {
                              "type": "string"
                            },
                            "verified_by": {
                              "type": "object",
                              "properties": {
                                "avatar_url": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string"
                                },
                                "person": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Website": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "test_ID": {
                      "type": "object",
                      "properties": {
                        "unique_id": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "number"
                            },
                            "prefix": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "title": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "post",
        "path": "/operation/NotionPageManageCreateNewPageInWorkspace/pages"
      },
      {
        "id": "NotionContentSearchSearchPagesAndDatabases",
        "name": "Search Notion workspace content comprehensively. Workflow: searchPagesAndDatabases -> retrievePageById or retrieveDatabaseById for details. Offers filtering, sorting, and pagination. Returns titles, IDs, and parent information.",
        "raw_description": "Searches pages and databases across the Notion workspace. Essential for locating content or preparing for other operations. Use for content discovery, ID retrieval, and generating indexes. If specific IDs are needed for other operations, start with this search. Refine search results using filters and sorting options. Common applications include creating content inventories, finding relevant information quickly, and preparing for bulk operations on multiple pages or databases.",
        "function_description": "Searches pages and databases across the Notion workspace. Essential for locating content or preparing for other operations. Use for content discovery, ID retrieval, and generating indexes. If specific IDs are needed for other operations, start with this search. Refine search results using filters and sorting options. Common applications include creating content inventories, finding relevant information quickly, and preparing for bulk operations on multiple pages or databases.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "filter": {
            "type": "object",
            "properties": {
              "property": {
                "enum": [
                  "object"
                ],
                "type": "string",
                "description": "The name of the property to filter by. Currently, the only property you can filter by is the object type.",
                "example": "object"
              },
              "value": {
                "enum": [
                  "page",
                  "database"
                ],
                "type": "string",
                "description": "The value of the property to filter the results by. Possible values are \"page\" or \"database\".",
                "example": "page"
              }
            },
            "description": "The filter conditions for the search."
          },
          "page_size": {
            "type": "integer",
            "description": "The number of results to return per page.",
            "format": "int32",
            "example": 50
          },
          "query": {
            "type": "string",
            "description": "The search query string. The text that the API compares page and database titles against.",
            "example": "Media Article"
          },
          "sort": {
            "type": "object",
            "properties": {
              "direction": {
                "enum": [
                  "ascending",
                  "descending"
                ],
                "type": "string",
                "description": "The direction to sort the results. Possible values are \"ascending\" and \"descending\".",
                "example": "ascending"
              },
              "timestamp": {
                "type": "string",
                "description": "The timestamp to sort the results by. Possible values include \"last_edited_time\".",
                "example": "last_edited_time"
              }
            },
            "description": "The sorting conditions for the search."
          },
          "start_cursor": {
            "type": "string",
            "description": "The cursor to start the search from.",
            "example": "123abc"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "description": "The filter conditions for the search.",
                  "properties": {
                    "property": {
                      "type": "string",
                      "enum": [
                        "object"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "enum": [
                        "page",
                        "database"
                      ]
                    }
                  }
                },
                "page_size": {
                  "type": "integer",
                  "description": "The number of results to return per page."
                },
                "query": {
                  "type": "string",
                  "description": "The search query string. The text that the API compares page and database titles against."
                },
                "sort": {
                  "type": "object",
                  "description": "The sorting conditions for the search.",
                  "properties": {
                    "direction": {
                      "type": "string",
                      "enum": [
                        "ascending",
                        "descending"
                      ]
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  }
                },
                "start_cursor": {
                  "type": "string",
                  "description": "The cursor to start the search from."
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "post",
        "path": "/operation/NotionContentSearchSearchPagesAndDatabases/search"
      },
      {
        "id": "NotionPageManageRetrievePageById",
        "name": "Fetch comprehensive page information. Workflow: searchPagesAndDatabases to locate -> retrievePageById -> listChildBlocks for content. Returns page properties, parent information, and metadata. Useful for content management.",
        "raw_description": "Retrieves a Page object using the specified ID. If notionPageId isn't provided, run searchPagesAndDatabases before anything else to find the correct page ID. Use to get metadata about pages before updating or for information retrieval. Essential for content management and analysis. Common applications include content display, page analysis, and data extraction. Useful for building custom views or preparing content for export.",
        "function_description": "Retrieves a Page object using the specified ID. If notionPageId isn't provided, run searchPagesAndDatabases before anything else to find the correct page ID. Use to get metadata about pages before updating or for information retrieval. Essential for content management and analysis. Common applications include content display, page analysis, and data extraction. Useful for building custom views or preparing content for export.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {
                "filter_properties": {
                  "type": "string",
                  "description": "A list of page property value IDs associated with the page. Use this param to limit the response to a specific page property value or values. To retrieve multiple properties, specify each page property ID."
                }
              },
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "The unique identifier of the Notion page containing the property to be retrieved. This ID specifies which page in the Notion workspace should be accessed for property information. It can be obtained from operations like searchPagesAndDatabases or queryDatabaseEntriesById."
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/NotionPageManageRetrievePageById/pages/{pageId}"
      },
      {
        "id": "NotionPageManageUpdateOrArchivePageById",
        "name": "Modify page properties or archive pages. Workflow: retrievePageById to check -> updateOrArchivePageById -> retrievePageById to confirm. Supports property updates, archiving, and visual changes. Essential for content lifecycle management.",
        "raw_description": "Updates or archives a page by ID. If ID isn't provided, use searchPagesAndDatabases first to find the correct page ID. Essential for content management and organization. Set 'archived' to true to archive a page. Use for content updates, archiving, and property modifications. Common applications include updating page metadata, archiving outdated content, and bulk page management. Useful for maintaining an organized workspace and implementing content lifecycle management.",
        "function_description": "Updates or archives a page by ID. If ID isn't provided, use searchPagesAndDatabases first to find the correct page ID. Essential for content management and organization. Set 'archived' to true to archive a page. Use for content updates, archiving, and property modifications. Common applications include updating page metadata, archiving outdated content, and bulk page management. Useful for maintaining an organized workspace and implementing content lifecycle management.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "archived": {
            "type": "boolean",
            "description": "A boolean indicating whether the page is archived.",
            "example": true
          },
          "cover": {
            "type": "object",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "type": "string"
              }
            },
            "description": "A cover image for the page. Only external file objects are supported."
          },
          "icon": {
            "type": "object",
            "properties": {
              "emoji": {
                "type": "string"
              },
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "type": {
                "type": "string"
              }
            },
            "description": "A page icon for the page. Supported types are external file object or emoji object."
          },
          "in_trash": {
            "type": "boolean",
            "description": "Set to true to delete a block. Set to false to restore a block."
          },
          "properties": {
            "type": "object",
            "description": "The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed."
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "pageId": {
                  "type": "string",
                  "description": "The unique identifier of the Notion page containing the property to be retrieved. This ID specifies which page in the Notion workspace should be accessed for property information. It can be obtained from operations like searchPagesAndDatabases or queryDatabaseEntriesById."
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "archived": {
                  "type": "boolean",
                  "description": "A boolean indicating whether the page is archived."
                },
                "cover": {
                  "type": "object",
                  "description": "A cover image for the page. Only external file objects are supported.",
                  "properties": {
                    "external": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "icon": {
                  "type": "object",
                  "description": "A page icon for the page. Supported types are external file object or emoji object.",
                  "properties": {
                    "emoji": {
                      "type": "string"
                    },
                    "external": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "in_trash": {
                  "type": "boolean",
                  "description": "Set to true to delete a block. Set to false to restore a block."
                },
                "properties": {
                  "type": "object",
                  "description": "The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed."
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "patch",
        "path": "/operation/NotionPageManageRetrievePageById/pages/{pageId}"
      },
      {
        "id": "NotionUserManageListAllUsersInWorkspace",
        "name": "Enumerate all Notion workspace users. Workflow: listAllUsersInWorkspace -> retrieveUserById for details. Returns user IDs, names, avatars, and email addresses. Essential for user management and access control.",
        "raw_description": "Lists all users in your Notion workspace. Crucial for user management and access control. Use to retrieve user IDs and other user details. Start with this operation if you need to find a specific user's ID for other user-related operations. Common applications include creating user directories, managing permissions, and organizing team structures. Useful for onboarding processes and auditing workspace access.",
        "function_description": "Lists all users in your Notion workspace. Crucial for user management and access control. Use to retrieve user IDs and other user details. Start with this operation if you need to find a specific user's ID for other user-related operations. Common applications include creating user directories, managing permissions, and organizing team structures. Useful for onboarding processes and auditing workspace access.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/NotionUserManageListAllUsersInWorkspace/users"
      },
      {
        "id": "NotionBlockManageRetrieveBlockById",
        "name": "Fetch detailed block information. Workflow: searchPagesAndDatabases to find -> retrieveBlockById -> updateBlockContent if needed. Returns block type, content, and metadata. Useful for content analysis and manipulation.",
        "raw_description": "Retrieves a Block object using the specified ID. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to inspect block properties or prepare for updates. Essential for content analysis and manipulation. Common applications include content display, block analysis, and data extraction. Useful for building custom views or preparing content for export.",
        "function_description": "Retrieves a Block object using the specified ID. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to inspect block properties or prepare for updates. Essential for content analysis and manipulation. Common applications include content display, block analysis, and data extraction. Useful for building custom views or preparing content for export.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "The unique identifier of the block to retrieve, update, or delete. This ID specifies which content element (e.g., paragraph, heading, list item) within a Notion page or database should be operated on. It can be obtained from operations like searchPagesAndDatabases or listChildBlocks."
                }
              },
              "required": [
                "blockId"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/NotionBlockManageRetrieveBlockById/blocks/{blockId}"
      },
      {
        "id": "NotionBlockManageDeleteBlockById",
        "name": "Remove specific Notion blocks permanently. Workflow: searchPagesAndDatabases to locate -> retrieveBlockById to confirm -> deleteBlockById. Irreversible action, use cautiously for content management.",
        "raw_description": "Deletes a block by its ID. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to remove specific content from pages or databases. Essential for content management and organization. Common applications include removing outdated or irrelevant content, content cleanup, and maintaining document structure. Exercise caution as this operation is irreversible.",
        "function_description": "Deletes a block by its ID. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the block ID. Use to remove specific content from pages or databases. Essential for content management and organization. Common applications include removing outdated or irrelevant content, content cleanup, and maintaining document structure. Exercise caution as this operation is irreversible.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "The unique identifier of the block to retrieve, update, or delete. This ID specifies which content element (e.g., paragraph, heading, list item) within a Notion page or database should be operated on. It can be obtained from operations like searchPagesAndDatabases or listChildBlocks."
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "delete",
        "path": "/operation/NotionBlockManageRetrieveBlockById/blocks/{blockId}"
      },
      {
        "id": "NotionBlockManageUpdateBlockContent",
        "name": "Modify existing block content dynamically. Workflow: retrieveBlockById to check -> updateBlockContent -> listChildBlocks to verify changes. Supports various block types and rich text content. Essential for content maintenance.",
        "raw_description": "Updates content for a specified block. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the correct block ID. Use to modify existing blocks in pages or databases. Essential for content maintenance and dynamic updates. Common applications include editing text, changing block types, and updating content dynamically. Useful for automated content management systems and interactive document editing.",
        "function_description": "Updates content for a specified block. If contentBlockId isn't provided, run searchPagesAndDatabases before anything else to find the correct block ID. Use to modify existing blocks in pages or databases. Essential for content maintenance and dynamic updates. Common applications include editing text, changing block types, and updating content dynamically. Useful for automated content management systems and interactive document editing.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "archived": {
            "type": "boolean",
            "description": "Set to true to archive (delete) a block. Set to false to un-archive (restore) a block."
          },
          "to_do": {
            "type": "object",
            "properties": {
              "checked": {
                "type": "boolean"
              },
              "rich_text": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "object",
                      "properties": {
                        "bold": {
                          "type": "boolean"
                        },
                        "code": {
                          "type": "boolean"
                        },
                        "color": {
                          "enum": [
                            "default",
                            "gray",
                            "brown",
                            "orange",
                            "yellow",
                            "green",
                            "blue",
                            "purple",
                            "pink",
                            "red",
                            "gray_background",
                            "brown_background",
                            "orange_background",
                            "yellow_background",
                            "green_background",
                            "blue_background",
                            "purple_background",
                            "pink_background",
                            "red_background"
                          ],
                          "type": "string",
                          "example": "default"
                        },
                        "italic": {
                          "type": "boolean"
                        },
                        "strikethrough": {
                          "type": "boolean"
                        },
                        "underline": {
                          "type": "boolean"
                        }
                      },
                      "description": "The annotations applied to the text."
                    },
                    "equation": {
                      "type": "object",
                      "properties": {
                        "expression": {
                          "type": "string",
                          "example": "E = mc^2"
                        }
                      },
                      "description": "The equation content."
                    },
                    "href": {
                      "type": "string",
                      "description": "The URL of the link."
                    },
                    "mention": {
                      "type": "object",
                      "properties": {
                        "database": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "date": {
                          "type": "object",
                          "properties": {
                            "end": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "start": {
                              "type": "string",
                              "format": "date"
                            }
                          }
                        },
                        "link_preview": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "page": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "template_mention": {
                          "type": "object",
                          "properties": {
                            "template_mention_date": {
                              "enum": [
                                "today",
                                "now"
                              ],
                              "type": "string"
                            },
                            "template_mention_user": {
                              "enum": [
                                "me"
                              ],
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "template_mention_date",
                                "template_mention_user"
                              ],
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "enum": [
                            "database",
                            "date",
                            "link_preview",
                            "page",
                            "template_mention",
                            "user"
                          ],
                          "type": "string",
                          "description": "The type of the mention."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        }
                      },
                      "description": "The mention content."
                    },
                    "plain_text": {
                      "type": "string",
                      "description": "The plain text content."
                    },
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "example": "Example text content"
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "example": "https://www.example.com"
                            }
                          }
                        }
                      },
                      "description": "The text content."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the rich text.",
                      "example": "text"
                    }
                  },
                  "description": "Represents rich text content in Notion."
                }
              }
            }
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "blockId": {
                  "type": "string",
                  "description": "The unique identifier of the block to retrieve, update, or delete. This ID specifies which content element (e.g., paragraph, heading, list item) within a Notion page or database should be operated on. It can be obtained from operations like searchPagesAndDatabases or listChildBlocks."
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "archived": {
                  "type": "boolean",
                  "description": "Set to true to archive (delete) a block. Set to false to un-archive (restore) a block."
                },
                "to_do": {
                  "type": "object",
                  "description": "to_do",
                  "properties": {
                    "checked": {
                      "type": "boolean"
                    },
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "bold": {
                                "type": "boolean"
                              },
                              "code": {
                                "type": "boolean"
                              },
                              "color": {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "gray",
                                  "brown",
                                  "orange",
                                  "yellow",
                                  "green",
                                  "blue",
                                  "purple",
                                  "pink",
                                  "red",
                                  "gray_background",
                                  "brown_background",
                                  "orange_background",
                                  "yellow_background",
                                  "green_background",
                                  "blue_background",
                                  "purple_background",
                                  "pink_background",
                                  "red_background"
                                ]
                              },
                              "italic": {
                                "type": "boolean"
                              },
                              "strikethrough": {
                                "type": "boolean"
                              },
                              "underline": {
                                "type": "boolean"
                              }
                            }
                          },
                          "equation": {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string"
                              }
                            }
                          },
                          "href": {
                            "type": "string"
                          },
                          "mention": {
                            "type": "object",
                            "properties": {
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "type": "string"
                                  },
                                  "start": {
                                    "type": "string"
                                  }
                                }
                              },
                              "link_preview": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              },
                              "template_mention": {
                                "type": "object",
                                "properties": {
                                  "template_mention_date": {
                                    "type": "string",
                                    "enum": [
                                      "today",
                                      "now"
                                    ]
                                  },
                                  "template_mention_user": {
                                    "type": "string",
                                    "enum": [
                                      "me"
                                    ]
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "template_mention_date",
                                      "template_mention_user"
                                    ]
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "database",
                                  "date",
                                  "link_preview",
                                  "page",
                                  "template_mention",
                                  "user"
                                ]
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "plain_text": {
                            "type": "string"
                          },
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "patch",
        "path": "/operation/NotionBlockManageRetrieveBlockById/blocks/{blockId}"
      },
      {
        "id": "xpfinish-agent-execution-finished",
        "name": "ReturnAgentFinalResults",
        "raw_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "function_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "result": {
            "type": "string",
            "example": "The agent final result based on the user input and instructions. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR"
          },
          "agent_builder_agent_id": {
            "type": "string",
            "example": "Created or updated agent id - only when creating or updating an ai agent. if manager exists take the first one. otherwise - the first agent"
          },
          "agent_builder_ai_employee_id": {
            "type": "string",
            "example": "Updated ai employee id - only when updating an ai employee"
          },
          "is_success": {
            "type": "boolean",
            "example": "True for succeeding with the user's request. False if not"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "body_params": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "The agent final response. based on the user input and instructions it should return here in a human readable text the answer to the user or to the parent agent. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR",
                  "example": "I have finished my job successfully, here is the notion page url that I created as you asked: https://www.notion.so/xpander/1723ef830b380978d32sdkcuhkd9f&pvs=4. This page includes all the data analysis that you sent me with the required headers based on the following template:\n\n📊 Data Analysis Report\n\n🎯 Executive Summary\n- Key findings from the analysis\n- Main recommendations\n\n📈 Data Overview\n- Data sources used\n- Time period covered\n- Sample size\n\n🔍 Detailed Analysis\n- Trend analysis\n- Key metrics performance\n- Comparative analysis\n\n💡 Insights & Recommendations\n- Key insights derived\n- Actionable recommendations\n- Next steps\n\nThe page has been structured according to your requirements and includes all the relevant charts and data visualizations."
                },
                "agent_builder_agent_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Agent. Use this field only when creating or updating an AI Agent. It is required to associate the parsed results with the correct agent instance during these specific operations. Ensure the ID matches the registry and is valid for the intended creation or update process. if manager exists take the first one. otherwise - the first agent",
                  "example": "02e491f0-d42f-4241-ba76-632e5f792011"
                },
                "agent_builder_ai_employee_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Employee. Use this field only when updating an AI Employee. It is required to associate the parsed results with the correct ai employee instance during these specific operations. Ensure the ID matches the registry and is valid for the intended update process.",
                  "example": "02e491f0-d42f-4241-ba76-632t12792011"
                },
                "is_success": {
                  "type": "boolean",
                  "description": "return True if the you finished the input task successfully. False if not",
                  "example": true
                }
              },
              "required": [
                "result",
                "is_success"
              ]
            },
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "body_params",
            "query_params",
            "path_params"
          ]
        },
        "method": "post",
        "path": "/operation/xpfinish-agent-execution-finished"
      }
    ],
    "icon": "🐞",
    "source_nodes": [
      {
        "id": "70f2f1bd-4228-41a1-9c52-cc9aaa65c706",
        "type": "assistant",
        "metadata": {}
      }
    ],
    "attached_tools": [
      {
        "id": "b5ab2d7d-3f48-480f-b9aa-268e00174210",
        "operation_ids": [
          "67792307566d5f29c3073bdd",
          "67792307566d5f29c3073be0",
          "67792307566d5f29c3073be1",
          "67792307566d5f29c3073be2",
          "67792307566d5f29c3073be3",
          "67792307566d5f29c3073be4",
          "67792307566d5f29c3073bd8",
          "67792307566d5f29c3073be5",
          "67792307566d5f29c3073bd7",
          "67792307566d5f29c3073bd9",
          "67792307566d5f29c3073bd5",
          "67792307566d5f29c3073bd6"
        ]
      }
    ],
    "access_scope": "organizational",
    "instructions": {
      "role": "You are the Notion Bug Tracker Agent, designed to manage and track bug reports in a Notion database. DB ID 37ab0204a8b0441fadafd3a981fb7992 ",
      "goal": "Your goal is to facilitate the creation, editing, and retrieval of bug reports in a structured format within Notion, ensuring all relevant details are captured and easily accessible.",
      "general": "You handle operations such as creating new bug report pages, updating existing ones, and retrieving specific bug details. Ensure each bug report includes sections for description, steps to reproduce, expected and actual results, screenshots, and environment details. Use the Notion API to interact with the database and maintain a consistent format for all entries. DB ID 37ab0204a8b0441fadafd3a981fb7992 DO NOT USE OTHER DBs"
    },
    "enriched_instructions": {
      "role": "You are the Notion Bug Tracker Agent, designed to manage and track bug reports in a Notion database. DB ID 37ab0204a8b0441fadafd3a981fb7992 ",
      "goal": "Your goal is to facilitate the creation, editing, and retrieval of bug reports in a structured format within Notion, ensuring all relevant details are captured and easily accessible.",
      "general": "You handle operations such as creating new bug report pages, updating existing ones, and retrieving specific bug details. Ensure each bug report includes sections for description, steps to reproduce, expected and actual results, screenshots, and environment details. Use the Notion API to interact with the database and maintain a consistent format for all entries. DB ID 37ab0204a8b0441fadafd3a981fb7992 DO NOT USE OTHER DBs"
    },
    "oas": {
      "info": {
        "title": "App",
        "version": "1.0.0"
      },
      "paths": {
        "/6e507bd5-d11f-4f1c-90aa-07763b1a41ec": {
          "get": {
            "description": "This operation processes a sub-task in Notion by providing detailed information based on the input query. Use this operation when you need to manage tasks such as editing, creating, or retrieving bug reports, or when you require specific insights related to tasks. It is particularly useful for enhancing productivity in project management, ensuring that all relevant details are captured and processed efficiently.",
            "operationId": "NotionProcessSubTaskWithDetails",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [
                          "Edit the bug report titled 'UI Glitch on Dashboard' to update the steps to reproduce.",
                          "Find the bug report related to 'Login Failure on Mobile'.",
                          "Create a new bug report with the title 'API Spec Update Issue'.",
                          "Add a screenshot to the bug report 'Data Sync Error'.",
                          "List all open bug reports in the 'Critical' category."
                        ],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "openapi": "3.1.0"
    },
    "builder_approval_flow": "mutating",
    "graph": [
      {
        "id": "38c562f4-f1dc-43c9-ae87-95592925da66",
        "item_id": "NotionDatabaseManageRetrieveDatabaseById",
        "name": "NotionDatabaseManageRetrieveDatabaseById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "38c562f4-f1dc-43c9-ae87-95592925da66"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "79bd2be4-44d6-455c-91e1-7a58a4ee81e1",
        "item_id": "NotionPageManageCreateNewPageInWorkspace",
        "name": "NotionPageManageCreateNewPageInWorkspace",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "79bd2be4-44d6-455c-91e1-7a58a4ee81e1"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "d76eea43-f702-42bd-89a7-7b3fcdfe8076",
        "item_id": "NotionPageManageRetrievePageById",
        "name": "NotionPageManageRetrievePageById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "d76eea43-f702-42bd-89a7-7b3fcdfe8076"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "bedd7bb8-cf9b-4b77-86ae-7eafceb22535",
        "item_id": "NotionPageManageUpdateOrArchivePageById",
        "name": "NotionPageManageUpdateOrArchivePageById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "bedd7bb8-cf9b-4b77-86ae-7eafceb22535"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "038e4894-571e-47bb-ac7e-b13e42443aa7",
        "item_id": "NotionPagePropertiesRetrievePropertyItemById",
        "name": "NotionPagePropertiesRetrievePropertyItemById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "038e4894-571e-47bb-ac7e-b13e42443aa7"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "6b711b48-a013-49f9-a1cf-968b68b9d8e1",
        "item_id": "NotionContentSearchSearchPagesAndDatabases",
        "name": "NotionContentSearchSearchPagesAndDatabases",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "6b711b48-a013-49f9-a1cf-968b68b9d8e1"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "d8eb5c73-3972-48e3-948b-d929ef688c92",
        "item_id": "NotionBlockManageListChildBlocks",
        "name": "NotionBlockManageListChildBlocks",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "d8eb5c73-3972-48e3-948b-d929ef688c92"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "8c6d7360-12d1-4d22-a5ec-566ee96a771a",
        "item_id": "NotionUserManageListAllUsersInWorkspace",
        "name": "NotionUserManageListAllUsersInWorkspace",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "8c6d7360-12d1-4d22-a5ec-566ee96a771a"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "f62ce138-5d4e-49c7-b83e-056cedd4306a",
        "item_id": "NotionBlockManageUpdateBlockContent",
        "name": "NotionBlockManageUpdateBlockContent",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "f62ce138-5d4e-49c7-b83e-056cedd4306a"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "fe0fc8ed-1415-4773-a5e3-c983ab34825c",
        "item_id": "NotionBlockManageAppendChildBlocks",
        "name": "NotionBlockManageAppendChildBlocks",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "fe0fc8ed-1415-4773-a5e3-c983ab34825c"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "2d9df505-01ac-4791-a1ff-53e96b213c65",
        "item_id": "NotionBlockManageRetrieveBlockById",
        "name": "NotionBlockManageRetrieveBlockById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "2d9df505-01ac-4791-a1ff-53e96b213c65"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "39230ecd-1b77-465a-9158-28d83b1cb6f3",
        "item_id": "NotionBlockManageDeleteBlockById",
        "name": "NotionBlockManageDeleteBlockById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "39230ecd-1b77-465a-9158-28d83b1cb6f3"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "936b276d-f6c2-430e-9587-2344da6a6647",
        "item_id": "NotionDatabaseManageRetrieveDatabaseById",
        "name": "NotionDatabaseManageRetrieveDatabaseById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "936b276d-f6c2-430e-9587-2344da6a6647"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "06345294-f6ed-4e4c-b2ec-b5d13623edb1",
        "item_id": "NotionPageManageCreateNewPageInWorkspace",
        "name": "NotionPageManageCreateNewPageInWorkspace",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "06345294-f6ed-4e4c-b2ec-b5d13623edb1"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "2a73978b-1d25-4e12-a90e-6387dc94bd17",
        "item_id": "NotionPageManageRetrievePageById",
        "name": "NotionPageManageRetrievePageById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "2a73978b-1d25-4e12-a90e-6387dc94bd17"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "795ce620-379e-4e08-9dc5-b2ed535ceba6",
        "item_id": "NotionPageManageUpdateOrArchivePageById",
        "name": "NotionPageManageUpdateOrArchivePageById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "795ce620-379e-4e08-9dc5-b2ed535ceba6"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "bd592fec-ccfc-4ba0-bbab-843190e2c109",
        "item_id": "NotionPagePropertiesRetrievePropertyItemById",
        "name": "NotionPagePropertiesRetrievePropertyItemById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "bd592fec-ccfc-4ba0-bbab-843190e2c109"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "5a9049fa-e5f2-4ed3-a14d-73c79b634687",
        "item_id": "NotionContentSearchSearchPagesAndDatabases",
        "name": "NotionContentSearchSearchPagesAndDatabases",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "5a9049fa-e5f2-4ed3-a14d-73c79b634687"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "30c2505f-ee5d-4ab2-9b6b-75ce24916d49",
        "item_id": "NotionBlockManageListChildBlocks",
        "name": "NotionBlockManageListChildBlocks",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "30c2505f-ee5d-4ab2-9b6b-75ce24916d49"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "f1b37aa5-2a0d-4fa4-b2e0-0e61d3baf725",
        "item_id": "NotionUserManageListAllUsersInWorkspace",
        "name": "NotionUserManageListAllUsersInWorkspace",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "f1b37aa5-2a0d-4fa4-b2e0-0e61d3baf725"
        ],
        "settings": null,
        "is_first": false
      }
    ],
    "status": "ACTIVE",
    "memory_type": "short_term",
    "memory_strategy": "full",
    "knowledge_bases": [],
    "version": 5,
    "organization_id": "ee8e59aa-1498-49a9-b875-8aedb544acc9",
    "created_by": "4fc1f5d5-db0a-44b1-b6b0-7302cc715e54",
    "created_at": "2025-02-23T19:41:55.186955Z",
    "type": "regular",
    "delegation_type": "router",
    "delegation_memory_strategy": "summarization",
    "is_ai_employee": false,
    "deletable": true,
    "model_provider": "openai",
    "model_name": "gpt-4o"
  },
  {
    "id": "056ca7b9-3d48-419f-9a50-db42e8c7588a",
    "assistant_id": "asst_123",
    "created_by_prompt": null,
    "thread_ids": [],
    "prompts": [],
    "enriched_prompts": [],
    "name": "New Agents Team",
    "description": "",
    "tools": [
      {
        "id": "NotionProcessSubTaskWithDetails",
        "name": "NotionProcessSubTaskWithDetails",
        "raw_description": "This operation processes a sub-task in Notion by providing detailed information relevant to the task. Use this operation when you need to execute specific actions like creating reports, updating task statuses, or managing bug reports. It is particularly useful for automating workflows, enhancing project management, and integrating various task-related functionalities within the Notion workspace.",
        "function_description": "This operation processes a sub-task in Notion by providing detailed information relevant to the task. Use this operation when you need to execute specific actions like creating reports, updating task statuses, or managing bug reports. It is particularly useful for automating workflows, enhancing project management, and integrating various task-related functionalities within the Notion workspace.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "input_task": {
            "type": "string",
            "example": [
              "Create a new bug report in the database.",
              "List all tasks assigned to the engineering team.",
              "Update the status of the engineering task to 'In Progress'.",
              "Generate a report of all open bugs.",
              "Summarize the progress of tasks for the current sprint."
            ],
            "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "input_task": {
                  "type": "string",
                  "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/3a6c7a9f-efb2-4ec0-87dd-9419ad01ba31"
      },
      {
        "id": "CrunchbaseAndLinkedInRetrieveCompanyInsights",
        "name": "CrunchbaseAndLinkedInRetrieveCompanyInsights",
        "raw_description": "This operation retrieves comprehensive company insights from Crunchbase and LinkedIn based on user queries. Use this operation when you need detailed information about companies, including executive summaries, contact details, and related insights. It is particularly useful for market research, competitive analysis, and networking, allowing users to gather essential data for informed decision-making across business and professional contexts.",
        "function_description": "This operation retrieves comprehensive company insights from Crunchbase and LinkedIn based on user queries. Use this operation when you need detailed information about companies, including executive summaries, contact details, and related insights. It is particularly useful for market research, competitive analysis, and networking, allowing users to gather essential data for informed decision-making across business and professional contexts.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "input_task": {
            "type": "string",
            "example": [
              "Can you provide a summary of the key executives at 'Global Enterprises'?",
              "Find detailed company information for 'Tech Innovators Inc.' on Crunchbase.",
              "Retrieve contact details for the CEO of 'Startup Hub' from LinkedIn.",
              "What are the latest insights on 'Green Energy Solutions' from Taviliy?",
              "Research the professional background of John Doe using LinkedIn."
            ],
            "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "input_task": {
                  "type": "string",
                  "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/5e30eff3-0bb1-4fe2-86ea-378d2381fd07"
      },
      {
        "id": "CalendarManageEventsAndTasks",
        "name": "CalendarManageEventsAndTasks",
        "raw_description": "This operation manages calendar events and tasks by processing user-defined sub-tasks. Use this operation to create, update, delete, or list events in a calendar. It is particularly useful for applications that require event management, scheduling, or task organization, allowing users to efficiently handle their calendar activities with detailed context and insights.",
        "function_description": "This operation manages calendar events and tasks by processing user-defined sub-tasks. Use this operation to create, update, delete, or list events in a calendar. It is particularly useful for applications that require event management, scheduling, or task organization, allowing users to efficiently handle their calendar activities with detailed context and insights.",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "input_task": {
            "type": "string",
            "example": [
              "Create a new event for tomorrow at 3 PM titled 'Team Meeting'.",
              "Update the location of the 'Project Kickoff' event to 'Conference Room B'.",
              "Delete the 'Weekly Sync' event from my calendar.",
              "Move the 'Client Presentation' event to the 'Business Calendar'.",
              "List all events scheduled for next week."
            ],
            "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {
                "input_task": {
                  "type": "string",
                  "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                }
              },
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/60b473b1-4c5b-459b-92d9-d87e4db3f30d"
      },
      {
        "id": "xpfinish-agent-execution-finished",
        "name": "ReturnAgentFinalResults",
        "raw_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "function_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\nif rejected by HITL (Approval flow) mention it\n        ",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "result": {
            "type": "string",
            "example": "The agent final result based on the user input and instructions. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR"
          },
          "agent_builder_agent_id": {
            "type": "string",
            "example": "Created or updated agent id - only when creating or updating an ai agent. if manager exists take the first one. otherwise - the first agent"
          },
          "agent_builder_ai_employee_id": {
            "type": "string",
            "example": "Updated ai employee id - only when updating an ai employee"
          },
          "is_success": {
            "type": "boolean",
            "example": "True for succeeding with the user's request. False if not"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "body_params": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "The agent final response. based on the user input and instructions it should return here in a human readable text the answer to the user or to the parent agent. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR. if rejected by HITL (Approval flow) mention it",
                  "example": "I have finished my job successfully, here is the notion page url that I created as you asked: https://www.notion.so/xpander/1723ef830b380978d32sdkcuhkd9f&pvs=4. This page includes all the data analysis that you sent me with the required headers based on the following template:\n\n📊 Data Analysis Report\n\n🎯 Executive Summary\n- Key findings from the analysis\n- Main recommendations\n\n📈 Data Overview\n- Data sources used\n- Time period covered\n- Sample size\n\n🔍 Detailed Analysis\n- Trend analysis\n- Key metrics performance\n- Comparative analysis\n\n💡 Insights & Recommendations\n- Key insights derived\n- Actionable recommendations\n- Next steps\n\nThe page has been structured according to your requirements and includes all the relevant charts and data visualizations."
                },
                "agent_builder_agent_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Agent. Use this field only when creating or updating an AI Agent. It is required to associate the parsed results with the correct agent instance during these specific operations. Ensure the ID matches the registry and is valid for the intended creation or update process. if manager exists take the first one. otherwise - the first agent",
                  "example": "02e491f0-d42f-4241-ba76-632e5f792011"
                },
                "agent_builder_ai_employee_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Employee. Use this field only when updating an AI Employee. It is required to associate the parsed results with the correct ai employee instance during these specific operations. Ensure the ID matches the registry and is valid for the intended update process.",
                  "example": "02e491f0-d42f-4241-ba76-632t12792011"
                },
                "is_success": {
                  "type": "boolean",
                  "description": "return True if the you finished the input task successfully. False if not",
                  "example": true
                }
              },
              "required": [
                "result",
                "is_success"
              ]
            },
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "body_params",
            "query_params",
            "path_params"
          ]
        },
        "method": "post",
        "path": "/operation/xpfinish-agent-execution-finished"
      }
    ],
    "icon": "🤖",
    "source_nodes": [],
    "attached_tools": [],
    "access_scope": "organizational",
    "instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "enriched_instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "oas": {
      "info": {
        "title": "App",
        "version": "1.0.0"
      },
      "paths": {
        "/3a6c7a9f-efb2-4ec0-87dd-9419ad01ba31": {
          "get": {
            "description": "This operation processes a sub-task in Notion by providing detailed information relevant to the task. Use this operation when you need to execute specific actions like creating reports, updating task statuses, or managing bug reports. It is particularly useful for automating workflows, enhancing project management, and integrating various task-related functionalities within the Notion workspace.",
            "operationId": "NotionProcessSubTaskWithDetails",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [
                          "Create a new bug report in the database.",
                          "List all tasks assigned to the engineering team.",
                          "Update the status of the engineering task to 'In Progress'.",
                          "Generate a report of all open bugs.",
                          "Summarize the progress of tasks for the current sprint."
                        ],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/5e30eff3-0bb1-4fe2-86ea-378d2381fd07": {
          "get": {
            "description": "This operation retrieves comprehensive company insights from Crunchbase and LinkedIn based on user queries. Use this operation when you need detailed information about companies, including executive summaries, contact details, and related insights. It is particularly useful for market research, competitive analysis, and networking, allowing users to gather essential data for informed decision-making across business and professional contexts.",
            "operationId": "CrunchbaseAndLinkedInRetrieveCompanyInsights",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [
                          "Can you provide a summary of the key executives at 'Global Enterprises'?",
                          "Find detailed company information for 'Tech Innovators Inc.' on Crunchbase.",
                          "Retrieve contact details for the CEO of 'Startup Hub' from LinkedIn.",
                          "What are the latest insights on 'Green Energy Solutions' from Taviliy?",
                          "Research the professional background of John Doe using LinkedIn."
                        ],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/60b473b1-4c5b-459b-92d9-d87e4db3f30d": {
          "get": {
            "description": "This operation manages calendar events and tasks by processing user-defined sub-tasks. Use this operation to create, update, delete, or list events in a calendar. It is particularly useful for applications that require event management, scheduling, or task organization, allowing users to efficiently handle their calendar activities with detailed context and insights.",
            "operationId": "CalendarManageEventsAndTasks",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [
                          "Create a new event for tomorrow at 3 PM titled 'Team Meeting'.",
                          "Update the location of the 'Project Kickoff' event to 'Conference Room B'.",
                          "Delete the 'Weekly Sync' event from my calendar.",
                          "Move the 'Client Presentation' event to the 'Business Calendar'.",
                          "List all events scheduled for next week."
                        ],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "openapi": "3.1.0"
    },
    "builder_approval_flow": "mutating",
    "graph": [
      {
        "id": "6ab46766-4a78-46dd-8acc-9ee8973f4cc6",
        "item_id": "3a6c7a9f-efb2-4ec0-87dd-9419ad01ba31",
        "name": "Notion Agile Task Manager",
        "type": "agent",
        "sub_type": "operation",
        "targets": [],
        "settings": null,
        "is_first": false
      },
      {
        "id": "f650ff69-51e8-4518-9429-3a98624fec0f",
        "item_id": "5e30eff3-0bb1-4fe2-86ea-378d2381fd07",
        "name": "Research and Insights Agent",
        "type": "agent",
        "sub_type": "operation",
        "targets": [],
        "settings": null,
        "is_first": false
      },
      {
        "id": "f2a6fd61-cd3e-4ce8-be55-fa27bd3a2707",
        "item_id": "60b473b1-4c5b-459b-92d9-d87e4db3f30d",
        "name": "Xpander Calendar Control Agent",
        "type": "agent",
        "sub_type": "operation",
        "targets": [],
        "settings": null,
        "is_first": false
      }
    ],
    "status": "ACTIVE",
    "memory_type": "short_term",
    "memory_strategy": "full",
    "knowledge_bases": [],
    "version": 1,
    "organization_id": "ee8e59aa-1498-49a9-b875-8aedb544acc9",
    "created_by": "4fc1f5d5-db0a-44b1-b6b0-7302cc715e54",
    "created_at": "2025-03-04T17:36:20.946550Z",
    "type": "manager",
    "delegation_type": "router",
    "delegation_memory_strategy": "summarization",
    "is_ai_employee": false,
    "deletable": true,
    "model_provider": "openai",
    "model_name": "gpt-4o"
  },
  {
    "id": "e5fb9108-8a88-4ac6-a630-2496006f76b6",
    "assistant_id": "asst_123",
    "created_by_prompt": null,
    "thread_ids": [],
    "prompts": [],
    "enriched_prompts": [],
    "name": "New Agent",
    "description": "",
    "tools": [
      {
        "id": "HackerNewsStoriesGetBestStoryIdsList",
        "name": "Fetch IDs of current \"best\" stories on Hacker News. Workflow: GetBestStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs for highly upvoted or particularly engaging content.",
        "raw_description": "Fetches a list of IDs for the current \"best\" stories on Hacker News, representing highly upvoted or particularly engaging content. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for curating high-quality content, analyzing factors contributing to story popularity, or creating a feed of well-received articles and discussions.",
        "function_description": "Fetches a list of IDs for the current \"best\" stories on Hacker News, representing highly upvoted or particularly engaging content. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for curating high-quality content, analyzing factors contributing to story popularity, or creating a feed of well-received articles and discussions.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetBestStoryIdsList/beststories.json"
      },
      {
        "id": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "name": "Retrieve recent updates to items and user profiles. Workflow: GetRecentItemAndUserChanges -> RetrieveItemDetailsById/GetUserProfileById. Returns two arrays: 'items' (recently changed item IDs) and 'profiles' (recently changed user IDs).",
        "raw_description": "Retrieves the most recent updates to items and user profiles on Hacker News. This operation provides a snapshot of recent activity, including new items and profile changes. Use it to monitor real-time platform activity, track content updates, or maintain synchronized data in external applications. Helpful for building live update systems or analyzing patterns in user and content modifications.",
        "function_description": "Retrieves the most recent updates to items and user profiles on Hacker News. This operation provides a snapshot of recent activity, including new items and profile changes. Use it to monitor real-time platform activity, track content updates, or maintain synchronized data in external applications. Helpful for building live update systems or analyzing patterns in user and content modifications.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsUpdatesGetRecentItemAndUserChanges/updates.json"
      },
      {
        "id": "HackerNewsItemsGetCurrentLargestItemId",
        "name": "Obtain the most recent item ID on Hacker News. Useful for tracking platform activity and finding new content. Workflow: GetCurrentLargestItemId -> RetrieveItemDetailsById. Returns a single integer representing the latest item ID.",
        "raw_description": "Retrieves the current largest item ID on Hacker News, representing the most recently created item. This operation is useful for determining the latest activity on the platform and can serve as a starting point for retrieving recent items. Use this to find the upper bound of item IDs when iterating through recent content or to check for new items since a previous query.",
        "function_description": "Retrieves the current largest item ID on Hacker News, representing the most recently created item. This operation is useful for determining the latest activity on the platform and can serve as a starting point for retrieving recent items. Use this to find the upper bound of item IDs when iterating through recent content or to check for new items since a previous query.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsItemsGetCurrentLargestItemId/maxitem.json"
      },
      {
        "id": "HackerNewsStoriesGetTopStoryIdsList",
        "name": "Fetch IDs of current top stories on Hacker News. Workflow: GetTopStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs, representing the most popular and engaging content on the platform.",
        "raw_description": "Fetches a list of IDs for the current top stories on Hacker News. This operation provides a curated selection of popular and trending stories. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Common applications include creating a feed of top stories, analyzing trending topics, or monitoring the most engaging content on the platform.",
        "function_description": "Fetches a list of IDs for the current top stories on Hacker News. This operation provides a curated selection of popular and trending stories. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Common applications include creating a feed of top stories, analyzing trending topics, or monitoring the most engaging content on the platform.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetTopStoryIdsList/topstories.json"
      },
      {
        "id": "HackerNewsUsersGetUserProfileById",
        "name": "Retrieve detailed profile of a Hacker News user by ID. Workflow: RetrieveItemDetailsById -> GetUserProfileById. Provides unique user attributes such as 'karma' (user reputation) and 'delay' (submission delay imposed on the user).",
        "raw_description": "Fetches detailed profile information for a specific Hacker News user by their unique ID. If the user ID isn't provided, you may need to extract it from item details obtained via RetrieveItemDetailsById. This operation is essential for gathering user-specific data such as karma score, account creation date, and user bio. Use cases include user analysis, reputation tracking, or verifying user credentials when referencing content creators.",
        "function_description": "Fetches detailed profile information for a specific Hacker News user by their unique ID. If the user ID isn't provided, you may need to extract it from item details obtained via RetrieveItemDetailsById. This operation is essential for gathering user-specific data such as karma score, account creation date, and user bio. Use cases include user analysis, reputation tracking, or verifying user credentials when referencing content creators.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item ID"
                }
              },
              "required": [
                "id"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/HackerNewsUsersGetUserProfileById/user/{id}.json"
      },
      {
        "id": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "name": "Obtain IDs of the most recent stories across all categories. Workflow: RetrieveNewStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs, providing access to the latest content on the platform.",
        "raw_description": "Obtains a list of IDs for the most recent stories posted on Hacker News. This operation provides access to the latest content across all categories. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for creating real-time feeds, monitoring breaking news, or analyzing the influx of new content on the platform.",
        "function_description": "Obtains a list of IDs for the most recent stories posted on Hacker News. This operation provides access to the latest content across all categories. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for creating real-time feeds, monitoring breaking news, or analyzing the influx of new content on the platform.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesRetrieveNewStoryIdsList/newstories.json"
      },
      {
        "id": "HackerNewsItemsRetrieveItemDetailsById",
        "name": "Fetch comprehensive details of a Hacker News item by ID. Workflow: GetTopStoryIdsList -> RetrieveItemDetailsById -> GetUserProfileById. Returns unique fields like 'kids' (child comments), 'parts' (poll options), and 'parent' (parent item for comments).",
        "raw_description": "Retrieves detailed information for a specific Hacker News item (story, comment, etc.) by its unique ID. If the item ID isn't provided, run GetTopStoryIdsList, RetrieveAskStoryIdsList, GetShowStoryIdsList, FetchJobStoryIdsList, RetrieveNewStoryIdsList, or GetBestStoryIdsList before anything else to find an item ID. This operation is crucial for accessing comprehensive data about individual Hacker News entries. Common use cases include analyzing story content, tracking comment threads, or gathering metadata for specific items.",
        "function_description": "Retrieves detailed information for a specific Hacker News item (story, comment, etc.) by its unique ID. If the item ID isn't provided, run GetTopStoryIdsList, RetrieveAskStoryIdsList, GetShowStoryIdsList, FetchJobStoryIdsList, RetrieveNewStoryIdsList, or GetBestStoryIdsList before anything else to find an item ID. This operation is crucial for accessing comprehensive data about individual Hacker News entries. Common use cases include analyzing story content, tracking comment threads, or gathering metadata for specific items.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item ID"
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/HackerNewsItemsRetrieveItemDetailsById/item/{id}.json"
      },
      {
        "id": "HackerNewsStoriesFetchJobStoryIdsList",
        "name": "Gather IDs of current job stories on Hacker News. Workflow: FetchJobStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs specifically for employment opportunities in the tech community.",
        "raw_description": "Gathers a list of IDs for the current job stories posted on Hacker News. This operation focuses on employment opportunities shared within the tech community. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Applicable for job seekers, recruiters, or those analyzing tech industry hiring trends.",
        "function_description": "Gathers a list of IDs for the current job stories posted on Hacker News. This operation focuses on employment opportunities shared within the tech community. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Applicable for job seekers, recruiters, or those analyzing tech industry hiring trends.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesFetchJobStoryIdsList/jobstories.json"
      },
      {
        "id": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "name": "Get IDs of current \"Ask HN\" stories. Workflow: RetrieveAskStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs specifically for questions and discussions posed by the community.",
        "raw_description": "Obtains a list of IDs for the current \"Ask HN\" stories. These are questions or discussion topics posed by the Hacker News community. Use this operation to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for analyzing community engagement, tracking discussion trends, or creating a feed of question-based content.",
        "function_description": "Obtains a list of IDs for the current \"Ask HN\" stories. These are questions or discussion topics posed by the Hacker News community. Use this operation to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for analyzing community engagement, tracking discussion trends, or creating a feed of question-based content.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesRetrieveAskStoryIdsList/askstories.json"
      },
      {
        "id": "HackerNewsStoriesGetShowStoryIdsList",
        "name": "Retrieve IDs of current \"Show HN\" stories. Workflow: GetShowStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs for posts where users showcase their projects or discoveries.",
        "raw_description": "Retrieves a list of IDs for the current \"Show HN\" stories. These are typically posts where users showcase their projects or discoveries. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for monitoring new projects, tracking community creations, or curating a feed of innovative content shared by Hacker News users.",
        "function_description": "Retrieves a list of IDs for the current \"Show HN\" stories. These are typically posts where users showcase their projects or discoveries. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for monitoring new projects, tracking community creations, or curating a feed of innovative content shared by Hacker News users.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetShowStoryIdsList/showstories.json"
      },
      {
        "id": "xpfinish-agent-execution-finished",
        "name": "ReturnAgentFinalResults",
        "raw_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "function_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\nif rejected by HITL (Approval flow) mention it\n        ",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "result": {
            "type": "string",
            "example": "The agent final result based on the user input and instructions. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR"
          },
          "agent_builder_agent_id": {
            "type": "string",
            "example": "Created or updated agent id - only when creating or updating an ai agent. if manager exists take the first one. otherwise - the first agent"
          },
          "agent_builder_ai_employee_id": {
            "type": "string",
            "example": "Updated ai employee id - only when updating an ai employee"
          },
          "is_success": {
            "type": "boolean",
            "example": "True for succeeding with the user's request. False if not"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "body_params": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "The agent final response. based on the user input and instructions it should return here in a human readable text the answer to the user or to the parent agent. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR. if rejected by HITL (Approval flow) mention it",
                  "example": "I have finished my job successfully, here is the notion page url that I created as you asked: https://www.notion.so/xpander/1723ef830b380978d32sdkcuhkd9f&pvs=4. This page includes all the data analysis that you sent me with the required headers based on the following template:\n\n📊 Data Analysis Report\n\n🎯 Executive Summary\n- Key findings from the analysis\n- Main recommendations\n\n📈 Data Overview\n- Data sources used\n- Time period covered\n- Sample size\n\n🔍 Detailed Analysis\n- Trend analysis\n- Key metrics performance\n- Comparative analysis\n\n💡 Insights & Recommendations\n- Key insights derived\n- Actionable recommendations\n- Next steps\n\nThe page has been structured according to your requirements and includes all the relevant charts and data visualizations."
                },
                "agent_builder_agent_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Agent. Use this field only when creating or updating an AI Agent. It is required to associate the parsed results with the correct agent instance during these specific operations. Ensure the ID matches the registry and is valid for the intended creation or update process. if manager exists take the first one. otherwise - the first agent",
                  "example": "02e491f0-d42f-4241-ba76-632e5f792011"
                },
                "agent_builder_ai_employee_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Employee. Use this field only when updating an AI Employee. It is required to associate the parsed results with the correct ai employee instance during these specific operations. Ensure the ID matches the registry and is valid for the intended update process.",
                  "example": "02e491f0-d42f-4241-ba76-632t12792011"
                },
                "is_success": {
                  "type": "boolean",
                  "description": "return True if the you finished the input task successfully. False if not",
                  "example": true
                }
              },
              "required": [
                "result",
                "is_success"
              ]
            },
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "body_params",
            "query_params",
            "path_params"
          ]
        },
        "method": "post",
        "path": "/operation/xpfinish-agent-execution-finished"
      }
    ],
    "icon": "🚀",
    "source_nodes": [],
    "attached_tools": [
      {
        "id": "5b618d44-7dad-48d0-be09-023d4939376f",
        "operation_ids": [
          "677921ad6f7afe0a57d81d92",
          "677921ad6f7afe0a57d81d93",
          "677921ad6f7afe0a57d81d95",
          "677921ad6f7afe0a57d81d97",
          "677921ad6f7afe0a57d81d98",
          "677921ad6f7afe0a57d81d99",
          "677921ad6f7afe0a57d81d9b",
          "677921ad6f7afe0a57d81d94",
          "677921ad6f7afe0a57d81d9a",
          "677921ad6f7afe0a57d81d96"
        ]
      }
    ],
    "access_scope": "organizational",
    "instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "enriched_instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "oas": {
      "info": {
        "title": "App",
        "version": "1.0.0"
      },
      "paths": {
        "/e5fb9108-8a88-4ac6-a630-2496006f76b6": {
          "get": {
            "description": "This operation processes a sub-task related to Hacker News by providing comprehensive information based on the input query. Use this when you need to automate tasks such as retrieving article details, user profiles, or job listings from Hacker News. It is particularly useful for applications that require data extraction, analysis, or integration of insights from Hacker News, ensuring that all relevant context and computed results are included in the response.",
            "operationId": "NewAgentHackerNewsProcessSubTask",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "openapi": "3.1.0"
    },
    "builder_approval_flow": "mutating",
    "graph": [
      {
        "id": "ff418cf9-31f0-46a8-82b6-f149f756d49b",
        "item_id": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "name": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "ff418cf9-31f0-46a8-82b6-f149f756d49b"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "cc1fd121-1ff2-4df1-8716-b9c8e6442242",
        "item_id": "HackerNewsStoriesGetBestStoryIdsList",
        "name": "HackerNewsStoriesGetBestStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "cc1fd121-1ff2-4df1-8716-b9c8e6442242"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "68cbc532-9476-4141-b03a-9739c8ed7a81",
        "item_id": "HackerNewsStoriesFetchJobStoryIdsList",
        "name": "HackerNewsStoriesFetchJobStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "68cbc532-9476-4141-b03a-9739c8ed7a81"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "0a518314-f658-4682-85cd-fd41514ea724",
        "item_id": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "name": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "0a518314-f658-4682-85cd-fd41514ea724"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "9aeace09-f096-49a7-b5eb-78c9d6e5059f",
        "item_id": "HackerNewsStoriesGetShowStoryIdsList",
        "name": "HackerNewsStoriesGetShowStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "9aeace09-f096-49a7-b5eb-78c9d6e5059f"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "b8e07848-212f-439e-85cd-af6240684643",
        "item_id": "HackerNewsStoriesGetTopStoryIdsList",
        "name": "HackerNewsStoriesGetTopStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "b8e07848-212f-439e-85cd-af6240684643"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "3eb786d9-f875-4ffa-823d-ac8a91df602f",
        "item_id": "HackerNewsUsersGetUserProfileById",
        "name": "HackerNewsUsersGetUserProfileById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "3eb786d9-f875-4ffa-823d-ac8a91df602f"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "6bd6c307-1352-411a-8b9f-dbb18af40e81",
        "item_id": "HackerNewsItemsRetrieveItemDetailsById",
        "name": "HackerNewsItemsRetrieveItemDetailsById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "6bd6c307-1352-411a-8b9f-dbb18af40e81"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "783cb170-0491-403f-a2a5-7832e01cbdf1",
        "item_id": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "name": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "783cb170-0491-403f-a2a5-7832e01cbdf1"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "0abb5161-8879-4987-a80a-b99baef95a38",
        "item_id": "HackerNewsItemsGetCurrentLargestItemId",
        "name": "HackerNewsItemsGetCurrentLargestItemId",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "0abb5161-8879-4987-a80a-b99baef95a38"
        ],
        "settings": null,
        "is_first": false
      }
    ],
    "status": "ACTIVE",
    "memory_type": "short_term",
    "memory_strategy": "full",
    "knowledge_bases": [],
    "version": 1,
    "organization_id": "ee8e59aa-1498-49a9-b875-8aedb544acc9",
    "created_by": "4fc1f5d5-db0a-44b1-b6b0-7302cc715e54",
    "created_at": "2025-03-10T03:24:38.280651Z",
    "type": "regular",
    "delegation_type": "router",
    "delegation_memory_strategy": "summarization",
    "is_ai_employee": false,
    "deletable": true,
    "model_provider": "openai",
    "model_name": "gpt-4o"
  },
  {
    "id": "9f63f757-bcbf-4b8c-8485-b06e50d145f3",
    "assistant_id": "asst_123",
    "created_by_prompt": null,
    "thread_ids": [],
    "prompts": [],
    "enriched_prompts": [],
    "name": "test-agent-from-fixed-cli-2",
    "description": "",
    "tools": [
      {
        "id": "xpfinish-agent-execution-finished",
        "name": "ReturnAgentFinalResults",
        "raw_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "function_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\nif rejected by HITL (Approval flow) mention it\n        ",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "result": {
            "type": "string",
            "example": "The agent final result based on the user input and instructions. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR"
          },
          "agent_builder_agent_id": {
            "type": "string",
            "example": "Created or updated agent id - only when creating or updating an ai agent. if manager exists take the first one. otherwise - the first agent"
          },
          "agent_builder_ai_employee_id": {
            "type": "string",
            "example": "Updated ai employee id - only when updating an ai employee"
          },
          "is_success": {
            "type": "boolean",
            "example": "True for succeeding with the user's request. False if not"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "body_params": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "The agent final response. based on the user input and instructions it should return here in a human readable text the answer to the user or to the parent agent. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR. if rejected by HITL (Approval flow) mention it",
                  "example": "I have finished my job successfully, here is the notion page url that I created as you asked: https://www.notion.so/xpander/1723ef830b380978d32sdkcuhkd9f&pvs=4. This page includes all the data analysis that you sent me with the required headers based on the following template:\n\n📊 Data Analysis Report\n\n🎯 Executive Summary\n- Key findings from the analysis\n- Main recommendations\n\n📈 Data Overview\n- Data sources used\n- Time period covered\n- Sample size\n\n🔍 Detailed Analysis\n- Trend analysis\n- Key metrics performance\n- Comparative analysis\n\n💡 Insights & Recommendations\n- Key insights derived\n- Actionable recommendations\n- Next steps\n\nThe page has been structured according to your requirements and includes all the relevant charts and data visualizations."
                },
                "agent_builder_agent_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Agent. Use this field only when creating or updating an AI Agent. It is required to associate the parsed results with the correct agent instance during these specific operations. Ensure the ID matches the registry and is valid for the intended creation or update process. if manager exists take the first one. otherwise - the first agent",
                  "example": "02e491f0-d42f-4241-ba76-632e5f792011"
                },
                "agent_builder_ai_employee_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Employee. Use this field only when updating an AI Employee. It is required to associate the parsed results with the correct ai employee instance during these specific operations. Ensure the ID matches the registry and is valid for the intended update process.",
                  "example": "02e491f0-d42f-4241-ba76-632t12792011"
                },
                "is_success": {
                  "type": "boolean",
                  "description": "return True if the you finished the input task successfully. False if not",
                  "example": true
                }
              },
              "required": [
                "result",
                "is_success"
              ]
            },
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "body_params",
            "query_params",
            "path_params"
          ]
        },
        "method": "post",
        "path": "/operation/xpfinish-agent-execution-finished"
      }
    ],
    "icon": "🚀",
    "source_nodes": [],
    "attached_tools": [],
    "access_scope": "organizational",
    "instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "enriched_instructions": {
      "role": "",
      "goal": "",
      "general": ""
    },
    "oas": {
      "info": {
        "title": "App",
        "version": "1.0.0"
      },
      "paths": {
        "/9f63f757-bcbf-4b8c-8485-b06e50d145f3": {
          "get": {
            "description": "This operation processes a sub-task based on the provided input query, returning all necessary information relevant to the task. Use this operation when you need to automate task handling, such as sending emails or retrieving data based on user queries. It is particularly useful for applications that require context extraction, result computation, and integration of insights from various sources to enhance task execution.",
            "operationId": "test-agent-from-fixed-cli-2ProcessSubTask",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "openapi": "3.1.0"
    },
    "builder_approval_flow": "mutating",
    "graph": [],
    "status": "ACTIVE",
    "memory_type": "short_term",
    "memory_strategy": "full",
    "knowledge_bases": [],
    "version": 1,
    "organization_id": "ee8e59aa-1498-49a9-b875-8aedb544acc9",
    "created_by": null,
    "created_at": "2025-03-09T22:37:13.845260Z",
    "type": "regular",
    "delegation_type": "router",
    "delegation_memory_strategy": "summarization",
    "is_ai_employee": false,
    "deletable": true,
    "model_provider": "openai",
    "model_name": "gpt-4o"
  },
  {
    "id": "1116f222-c96e-4012-a038-6d47bd743fa2",
    "assistant_id": "asst_123",
    "created_by_prompt": null,
    "thread_ids": [],
    "prompts": [
      "What are the top stories on Hacker News right now?",
      "Show me the latest job postings on Hacker News.",
      "Can you find the best Ask HN stories?",
      "Retrieve the profile of user 'pg'.",
      "What are the most recent updates on Hacker News?"
    ],
    "enriched_prompts": [
      "What are the top stories on Hacker News right now?",
      "Show me the latest job postings on Hacker News.",
      "Can you find the best Ask HN stories?",
      "Retrieve the profile of user 'pg'.",
      "What are the most recent updates on Hacker News?"
    ],
    "name": "Hacker News Agent",
    "description": "",
    "tools": [
      {
        "id": "HackerNewsUsersGetUserProfileById",
        "name": "Retrieve detailed profile of a Hacker News user by ID. Workflow: RetrieveItemDetailsById -> GetUserProfileById. Provides unique user attributes such as 'karma' (user reputation) and 'delay' (submission delay imposed on the user).",
        "raw_description": "Fetches detailed profile information for a specific Hacker News user by their unique ID. If the user ID isn't provided, you may need to extract it from item details obtained via RetrieveItemDetailsById. This operation is essential for gathering user-specific data such as karma score, account creation date, and user bio. Use cases include user analysis, reputation tracking, or verifying user credentials when referencing content creators.",
        "function_description": "Fetches detailed profile information for a specific Hacker News user by their unique ID. If the user ID isn't provided, you may need to extract it from item details obtained via RetrieveItemDetailsById. This operation is essential for gathering user-specific data such as karma score, account creation date, and user bio. Use cases include user analysis, reputation tracking, or verifying user credentials when referencing content creators.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item ID"
                }
              },
              "required": [
                "id"
              ]
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/HackerNewsUsersGetUserProfileById/user/{id}.json"
      },
      {
        "id": "HackerNewsItemsRetrieveItemDetailsById",
        "name": "Fetch comprehensive details of a Hacker News item by ID. Workflow: GetTopStoryIdsList -> RetrieveItemDetailsById -> GetUserProfileById. Returns unique fields like 'kids' (child comments), 'parts' (poll options), and 'parent' (parent item for comments).",
        "raw_description": "Retrieves detailed information for a specific Hacker News item (story, comment, etc.) by its unique ID. If the item ID isn't provided, run GetTopStoryIdsList, RetrieveAskStoryIdsList, GetShowStoryIdsList, FetchJobStoryIdsList, RetrieveNewStoryIdsList, or GetBestStoryIdsList before anything else to find an item ID. This operation is crucial for accessing comprehensive data about individual Hacker News entries. Common use cases include analyzing story content, tracking comment threads, or gathering metadata for specific items.",
        "function_description": "Retrieves detailed information for a specific Hacker News item (story, comment, etc.) by its unique ID. If the item ID isn't provided, run GetTopStoryIdsList, RetrieveAskStoryIdsList, GetShowStoryIdsList, FetchJobStoryIdsList, RetrieveNewStoryIdsList, or GetBestStoryIdsList before anything else to find an item ID. This operation is crucial for accessing comprehensive data about individual Hacker News entries. Common use cases include analyzing story content, tracking comment threads, or gathering metadata for specific items.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "parameters": {
          "type": "object",
          "properties": {
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Item ID"
                }
              },
              "required": []
            },
            "body_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "query_params",
            "path_params",
            "body_params"
          ]
        },
        "method": "get",
        "path": "/operation/HackerNewsItemsRetrieveItemDetailsById/item/{id}.json"
      },
      {
        "id": "HackerNewsStoriesGetBestStoryIdsList",
        "name": "Fetch IDs of current \"best\" stories on Hacker News. Workflow: GetBestStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs for highly upvoted or particularly engaging content.",
        "raw_description": "Fetches a list of IDs for the current \"best\" stories on Hacker News, representing highly upvoted or particularly engaging content. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for curating high-quality content, analyzing factors contributing to story popularity, or creating a feed of well-received articles and discussions.",
        "function_description": "Fetches a list of IDs for the current \"best\" stories on Hacker News, representing highly upvoted or particularly engaging content. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for curating high-quality content, analyzing factors contributing to story popularity, or creating a feed of well-received articles and discussions.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetBestStoryIdsList/beststories.json"
      },
      {
        "id": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "name": "Obtain IDs of the most recent stories across all categories. Workflow: RetrieveNewStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs, providing access to the latest content on the platform.",
        "raw_description": "Obtains a list of IDs for the most recent stories posted on Hacker News. This operation provides access to the latest content across all categories. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for creating real-time feeds, monitoring breaking news, or analyzing the influx of new content on the platform.",
        "function_description": "Obtains a list of IDs for the most recent stories posted on Hacker News. This operation provides access to the latest content across all categories. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for creating real-time feeds, monitoring breaking news, or analyzing the influx of new content on the platform.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesRetrieveNewStoryIdsList/newstories.json"
      },
      {
        "id": "HackerNewsItemsGetCurrentLargestItemId",
        "name": "Obtain the most recent item ID on Hacker News. Useful for tracking platform activity and finding new content. Workflow: GetCurrentLargestItemId -> RetrieveItemDetailsById. Returns a single integer representing the latest item ID.",
        "raw_description": "Retrieves the current largest item ID on Hacker News, representing the most recently created item. This operation is useful for determining the latest activity on the platform and can serve as a starting point for retrieving recent items. Use this to find the upper bound of item IDs when iterating through recent content or to check for new items since a previous query.",
        "function_description": "Retrieves the current largest item ID on Hacker News, representing the most recently created item. This operation is useful for determining the latest activity on the platform and can serve as a starting point for retrieving recent items. Use this to find the upper bound of item IDs when iterating through recent content or to check for new items since a previous query.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsItemsGetCurrentLargestItemId/maxitem.json"
      },
      {
        "id": "HackerNewsStoriesGetTopStoryIdsList",
        "name": "Fetch IDs of current top stories on Hacker News. Workflow: GetTopStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs, representing the most popular and engaging content on the platform.",
        "raw_description": "Fetches a list of IDs for the current top stories on Hacker News. This operation provides a curated selection of popular and trending stories. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Common applications include creating a feed of top stories, analyzing trending topics, or monitoring the most engaging content on the platform.",
        "function_description": "Fetches a list of IDs for the current top stories on Hacker News. This operation provides a curated selection of popular and trending stories. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Common applications include creating a feed of top stories, analyzing trending topics, or monitoring the most engaging content on the platform.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetTopStoryIdsList/topstories.json"
      },
      {
        "id": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "name": "Retrieve recent updates to items and user profiles. Workflow: GetRecentItemAndUserChanges -> RetrieveItemDetailsById/GetUserProfileById. Returns two arrays: 'items' (recently changed item IDs) and 'profiles' (recently changed user IDs).",
        "raw_description": "Retrieves the most recent updates to items and user profiles on Hacker News. This operation provides a snapshot of recent activity, including new items and profile changes. Use it to monitor real-time platform activity, track content updates, or maintain synchronized data in external applications. Helpful for building live update systems or analyzing patterns in user and content modifications.",
        "function_description": "Retrieves the most recent updates to items and user profiles on Hacker News. This operation provides a snapshot of recent activity, including new items and profile changes. Use it to monitor real-time platform activity, track content updates, or maintain synchronized data in external applications. Helpful for building live update systems or analyzing patterns in user and content modifications.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsUpdatesGetRecentItemAndUserChanges/updates.json"
      },
      {
        "id": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "name": "Get IDs of current \"Ask HN\" stories. Workflow: RetrieveAskStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs specifically for questions and discussions posed by the community.",
        "raw_description": "Obtains a list of IDs for the current \"Ask HN\" stories. These are questions or discussion topics posed by the Hacker News community. Use this operation to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for analyzing community engagement, tracking discussion trends, or creating a feed of question-based content.",
        "function_description": "Obtains a list of IDs for the current \"Ask HN\" stories. These are questions or discussion topics posed by the Hacker News community. Use this operation to find story IDs for further details retrieval using RetrieveItemDetailsById. Ideal for analyzing community engagement, tracking discussion trends, or creating a feed of question-based content.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesRetrieveAskStoryIdsList/askstories.json"
      },
      {
        "id": "HackerNewsStoriesGetShowStoryIdsList",
        "name": "Retrieve IDs of current \"Show HN\" stories. Workflow: GetShowStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs for posts where users showcase their projects or discoveries.",
        "raw_description": "Retrieves a list of IDs for the current \"Show HN\" stories. These are typically posts where users showcase their projects or discoveries. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for monitoring new projects, tracking community creations, or curating a feed of innovative content shared by Hacker News users.",
        "function_description": "Retrieves a list of IDs for the current \"Show HN\" stories. These are typically posts where users showcase their projects or discoveries. Use this to find story IDs for further details retrieval using RetrieveItemDetailsById. Useful for monitoring new projects, tracking community creations, or curating a feed of innovative content shared by Hacker News users.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesGetShowStoryIdsList/showstories.json"
      },
      {
        "id": "HackerNewsStoriesFetchJobStoryIdsList",
        "name": "Gather IDs of current job stories on Hacker News. Workflow: FetchJobStoryIdsList -> RetrieveItemDetailsById. Returns an array of story IDs specifically for employment opportunities in the tech community.",
        "raw_description": "Gathers a list of IDs for the current job stories posted on Hacker News. This operation focuses on employment opportunities shared within the tech community. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Applicable for job seekers, recruiters, or those analyzing tech industry hiring trends.",
        "function_description": "Gathers a list of IDs for the current job stories posted on Hacker News. This operation focuses on employment opportunities shared within the tech community. Use it to find story IDs for further details retrieval using RetrieveItemDetailsById. Applicable for job seekers, recruiters, or those analyzing tech industry hiring trends.",
        "path_params": {},
        "query_params": {},
        "body_schema": null,
        "method": "get",
        "path": "/operation/HackerNewsStoriesFetchJobStoryIdsList/jobstories.json"
      },
      {
        "id": "xpfinish-agent-execution-finished",
        "name": "ReturnAgentFinalResults",
        "raw_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\n        ",
        "function_description": "\nThis tool must be selected at the end of the process.\nthere are 3 options:\n1. Completed your task successfully -> return True and the results as got in the instructions.\n2. Missing input data and cannot proceed -> return False and the reason why you cannot proceed and what you expect to get as an input.\n3. Cannot proceed due to missing repeated failures, or an inability to solve the problem. -> return False and the reason why you cannot proceed and what is the error.\nThis tool must be selected at the end of the process instead of using a text message.\nIf you didnt receive the expected input data, use this tool immediately before anything else.\nIf you decided you finished the task successfully, return the results as got in the instructions.\nif rejected by HITL (Approval flow) mention it\n        ",
        "path_params": {},
        "query_params": {},
        "body_schema": {
          "result": {
            "type": "string",
            "example": "The agent final result based on the user input and instructions. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR"
          },
          "agent_builder_agent_id": {
            "type": "string",
            "example": "Created or updated agent id - only when creating or updating an ai agent. if manager exists take the first one. otherwise - the first agent"
          },
          "agent_builder_ai_employee_id": {
            "type": "string",
            "example": "Updated ai employee id - only when updating an ai employee"
          },
          "is_success": {
            "type": "boolean",
            "example": "True for succeeding with the user's request. False if not"
          }
        },
        "parameters": {
          "type": "object",
          "properties": {
            "body_params": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "description": "The agent final response. based on the user input and instructions it should return here in a human readable text the answer to the user or to the parent agent. when agent is part of regular conversation (assistant) mode - this field should be markdown - USE MARKDOWN ONLY IF CONVERSATION MODE IS SET TO REGULAR. if rejected by HITL (Approval flow) mention it",
                  "example": "I have finished my job successfully, here is the notion page url that I created as you asked: https://www.notion.so/xpander/1723ef830b380978d32sdkcuhkd9f&pvs=4. This page includes all the data analysis that you sent me with the required headers based on the following template:\n\n📊 Data Analysis Report\n\n🎯 Executive Summary\n- Key findings from the analysis\n- Main recommendations\n\n📈 Data Overview\n- Data sources used\n- Time period covered\n- Sample size\n\n🔍 Detailed Analysis\n- Trend analysis\n- Key metrics performance\n- Comparative analysis\n\n💡 Insights & Recommendations\n- Key insights derived\n- Actionable recommendations\n- Next steps\n\nThe page has been structured according to your requirements and includes all the relevant charts and data visualizations."
                },
                "agent_builder_agent_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Agent. Use this field only when creating or updating an AI Agent. It is required to associate the parsed results with the correct agent instance during these specific operations. Ensure the ID matches the registry and is valid for the intended creation or update process. if manager exists take the first one. otherwise - the first agent",
                  "example": "02e491f0-d42f-4241-ba76-632e5f792011"
                },
                "agent_builder_ai_employee_id": {
                  "type": "string",
                  "description": "The unique identifier for the AI Employee. Use this field only when updating an AI Employee. It is required to associate the parsed results with the correct ai employee instance during these specific operations. Ensure the ID matches the registry and is valid for the intended update process.",
                  "example": "02e491f0-d42f-4241-ba76-632t12792011"
                },
                "is_success": {
                  "type": "boolean",
                  "description": "return True if the you finished the input task successfully. False if not",
                  "example": true
                }
              },
              "required": [
                "result",
                "is_success"
              ]
            },
            "query_params": {
              "type": "object",
              "properties": {},
              "required": []
            },
            "path_params": {
              "type": "object",
              "properties": {},
              "required": []
            }
          },
          "required": [
            "body_params",
            "query_params",
            "path_params"
          ]
        },
        "method": "post",
        "path": "/operation/xpfinish-agent-execution-finished"
      }
    ],
    "icon": "📰",
    "source_nodes": [
      {
        "id": "91cb969d-0c6d-4e7b-8305-41781436f6d1",
        "type": "sdk",
        "metadata": {}
      }
    ],
    "attached_tools": [
      {
        "id": "5b618d44-7dad-48d0-be09-023d4939376f",
        "operation_ids": [
          "677921ad6f7afe0a57d81d92",
          "677921ad6f7afe0a57d81d93",
          "677921ad6f7afe0a57d81d95",
          "677921ad6f7afe0a57d81d97",
          "677921ad6f7afe0a57d81d98",
          "677921ad6f7afe0a57d81d99",
          "677921ad6f7afe0a57d81d9b",
          "677921ad6f7afe0a57d81d94",
          "677921ad6f7afe0a57d81d9a",
          "677921ad6f7afe0a57d81d96"
        ]
      }
    ],
    "access_scope": "organizational",
    "instructions": {
      "role": "You are the Hacker News Agent, responsible for retrieving and summarizing content from Hacker News.",
      "goal": "Your goal is to provide users with access to the latest stories, user profiles, and updates from Hacker News, enhancing their experience with curated content.",
      "general": ""
    },
    "enriched_instructions": {
      "role": "You are the Hacker News Agent, responsible for retrieving and summarizing content from Hacker News.",
      "goal": "Your goal is to provide users with access to the latest stories, user profiles, and updates from Hacker News, enhancing their experience with curated content.",
      "general": ""
    },
    "oas": {
      "info": {
        "title": "App",
        "version": "1.0.0"
      },
      "paths": {
        "/1116f222-c96e-4012-a038-6d47bd743fa2": {
          "get": {
            "description": "This operation processes a sub-task related to Hacker News and provides comprehensive insights based on the input query. Use this when you need detailed information such as top stories, job postings, or user profiles from Hacker News. It is particularly useful for applications that require real-time data retrieval, content analysis, or user engagement insights, leveraging various sources to enhance the response.",
            "operationId": "HackerNewsAgentProcessSubTaskWithInsights",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "input_task": {
                        "type": "string",
                        "example": [
                          "What are the top stories on Hacker News right now?",
                          "Can you find the best Ask HN stories?",
                          "Show me the latest job postings on Hacker News.",
                          "Retrieve the profile of user 'pg'.",
                          "What are the most recent updates on Hacker News?"
                        ],
                        "description": "Processes a sub-task based on the input query and provides all necessary information relevant to the task. Ensure that the data sent includes all related details derived from the query, including extracted context, computed results, and any additional insights from available sources. For example, if the task is to send an email, the input should include specific details such as recipient email, subject, and content, along with supplementary information derived from the query (e.g., longest readable tag, latest article title, and relevant internet-sourced insights)."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "openapi": "3.1.0"
    },
    "builder_approval_flow": "mutating",
    "graph": [
      {
        "id": "71284ae7-17d1-46a9-ba9f-6c9914282f81",
        "item_id": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "name": "HackerNewsStoriesRetrieveAskStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "71284ae7-17d1-46a9-ba9f-6c9914282f81"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "a9cbc720-c426-4d01-a9cd-0d775d17d36d",
        "item_id": "HackerNewsStoriesGetBestStoryIdsList",
        "name": "HackerNewsStoriesGetBestStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "a9cbc720-c426-4d01-a9cd-0d775d17d36d"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "0854f637-e453-464c-bd8c-f7a57ac801b2",
        "item_id": "HackerNewsStoriesFetchJobStoryIdsList",
        "name": "HackerNewsStoriesFetchJobStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "0854f637-e453-464c-bd8c-f7a57ac801b2"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "6f0bd470-b811-444a-a305-47b7195b8375",
        "item_id": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "name": "HackerNewsStoriesRetrieveNewStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "6f0bd470-b811-444a-a305-47b7195b8375"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "8b8a010e-5727-4d93-99c2-5fb3f831cd97",
        "item_id": "HackerNewsStoriesGetShowStoryIdsList",
        "name": "HackerNewsStoriesGetShowStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "8b8a010e-5727-4d93-99c2-5fb3f831cd97"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "413b148d-ce7c-47cb-ac98-c5ac6a693b84",
        "item_id": "HackerNewsStoriesGetTopStoryIdsList",
        "name": "HackerNewsStoriesGetTopStoryIdsList",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "413b148d-ce7c-47cb-ac98-c5ac6a693b84"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "2734a25f-c230-4d2b-8230-af5fed8391e4",
        "item_id": "HackerNewsUsersGetUserProfileById",
        "name": "HackerNewsUsersGetUserProfileById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "2734a25f-c230-4d2b-8230-af5fed8391e4"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "884e42bd-b324-4639-8cf7-f2778185a679",
        "item_id": "HackerNewsItemsRetrieveItemDetailsById",
        "name": "HackerNewsItemsRetrieveItemDetailsById",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "884e42bd-b324-4639-8cf7-f2778185a679"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "5d851011-d647-4e7d-bef5-958e7360e107",
        "item_id": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "name": "HackerNewsUpdatesGetRecentItemAndUserChanges",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "5d851011-d647-4e7d-bef5-958e7360e107"
        ],
        "settings": null,
        "is_first": false
      },
      {
        "id": "ce006699-5ec1-4879-8029-d43ac4443eb0",
        "item_id": "HackerNewsItemsGetCurrentLargestItemId",
        "name": "HackerNewsItemsGetCurrentLargestItemId",
        "type": "tool",
        "sub_type": null,
        "targets": [
          "ce006699-5ec1-4879-8029-d43ac4443eb0"
        ],
        "settings": null,
        "is_first": false
      }
    ],
    "status": "ACTIVE",
    "memory_type": "short_term",
    "memory_strategy": "full",
    "knowledge_bases": [],
    "version": 3,
    "organization_id": "ee8e59aa-1498-49a9-b875-8aedb544acc9",
    "created_by": "4fc1f5d5-db0a-44b1-b6b0-7302cc715e54",
    "created_at": "2025-03-10T03:27:27.784892Z",
    "type": "regular",
    "delegation_type": "router",
    "delegation_memory_strategy": "summarization",
    "is_ai_employee": false,
    "deletable": true,
    "model_provider": "openai",
    "model_name": "gpt-4o"
  }
]
